---
title: RabbitMQ&reg; for PCF Operations FAQ's
owner: London Services
---

## What should I check before deploying a new version of the tile?

Use the RabbitMQ Management UI to confirm that all nodes in the cluster are healthy. Alternatively, you can use the health metrics exposed by the firehose.  

You cannot rely solely on the `bosh instances` output. That output reflects the state of the Erlang VM used by RabbitMQ, not the RabbitMQ application.

## <a id="stopstart"></a> What is the correct way to stop and start RabbitMQ in PCF?

Only use BOSH commands to interact with the RabbitMQ application. For example:

* `bosh stop rabbitmq-server`
* `bosh start rabbitmq-server`

There are BOSH job lifecycle hooks which only fire when `rabbitmq-server` is
stopped in BOSH. You can also stop individual instances by running `bosh stop JOB [index]`.

<p class="note"><strong>Note:</strong> Do not use <code>monit stop rabbitmq-server</code>. It does not call the drain scripts.</p>

## <a id="boshstop"></a> What happens when I run bosh stop rabbitmq-server?

BOSH initiates the shutdown sequence from the bootstrap instance.

The sequence begins when an operator instructs the RabbitMQ application to shut down. Part of the shutdown process requires the Erlang VM the application runs to shut down as well. 

If both shutdowns are successful, perform the following checks to ensure that the RabbitMQ application and Erlang VM have stopped:

1. If `/var/vcap/sys/run/rabbitmq-server/pid` exists, check that the PID inside
this file does not point to a running Erlang VM process. Be sure you're tracking the Erlang PID and not the RabbitMQ PID.
1. Check that `rabbitmqctl` does not return an Erlang VM PID.

Once this completes on the bootstrap instance, BOSH will continue the same
sequence on the next instance. All remaining rabbitmq-server instances will be
stopped one by one.

## <a id="serverfailprocess"></a> What happens when bosh stop rabbitmq-server fails?

If the `bosh stop` fails, you will likely get an error saying that the drain
script failed with:

<pre class="terminal">result: 1 of 1 drain scripts failed. Failed Jobs: rabbitmq-server.
</pre>

## <a id="serverfailactions"></a> What do I do when bosh stop rabbitmq-server fails?

The drain script logs to `/var/vcap/sys/log/rabbitmq-server/drain.log`. If you
have a remote syslog configured, this will appear as the `rmq_server_drain`
program.

First, `bosh ssh` into the failing rabbitmq-server instance and start the
rabbitmq-server job by running `monit start rabbitmq-server`. 

You will not be able to start the job with `bosh start` since that command always runs the drain script first. If the drain script is failing, `bosh start` will fail.

Once rabbitmq-server job is running (confirm this via `monit status`), run `DEBUG=1`
`/var/vcap/jobs/rabbitmq-server/bin/drain`. This will tell you why itâ€™s
failing.

## <a id="backup"></a> How can I manually back up the state of the RabbitMQ cluster?

You can back up the state of a RabbitMQ cluster for both the on-demand and pre-provisioned services using the RabbitMQ Management API. Backups include vhosts, exchanges, queues, and users. 

### Back Up Manually

1. Log in to the RabbitMQ Management UI as the admin user you created.  

1. Select **export definitions** from the main page.  

### Back Up and Restore with a Script

Use the API to run scripts with code similar to the following:  

<ol>
<li>Enter the following command to run the backup script:
	<pre class="terminal">
	curl -u "$USERNAME:$PASSWORD" "http://$RABBIT_ADDRESS:15672/api/definitions"
	-o "$BACKUP_FOLDER/rabbit-backup.json"
	</pre>
</li>
<li>For the restore:
	<pre class="terminal">
	curl -u "$USERNAME:$PASSWORD" "http://$RABBIT_ADDRESS:15672/api/definitions"
	-X POST -H "Content-Type: application/json" -d
	"@$BACKUP_FOLDER/rabbit-backup.json"
	</pre>
</li>
</ol>

## <a id="preupgrade"></a> What pre-upgrade checks should I perform?

Before upgrading RabbitMQ, Pivotal recommends confirming the following items:

1. In Operations Manager, confirm that all instances are healthy.
2. Log into the RabbitMQ Management UI and confirm that no alarms have been triggered and that all nodes are healthy. They should display as green.
3. Confirm that the system is not close to hitting either the memory or disk alarm. Do this by looking at what has been consumed by each node in the RabbitMQ Managment UI.
