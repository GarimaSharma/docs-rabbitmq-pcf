---
title: Upgrading RabbitMQ for PCF
owner: London Services
---

RabbitMQ for PCF enables automated upgrades between versions of the product.
In some versions, you might be required to take the RabbitMQ cluster offline. 
Whenever this is necessary, it is noted in the release notes for those versions.

The upgrade paths for each version are detailed in the 
[Product Compatibility Matrix](https://docs.pivotal.io/resources/product-compatibility-matrix.pdf).

To upgrade on-demand instances from RabbitMQ v3.6 to v3.7,
see [Upgrade On-Demand Instances from RabbitMQ v3.6 to v3.7](#upgrade-ondemand).

## <a id="notes"></a> About the Upgrade

Note the following about the upgrade process:

* Upgrading to a newer version of the product does not cause any loss of data or
configuration.

* It may take busy RabbitMQ nodes a long time to shut down during
the upgrade and you must not interrupt this process.

* The benefit you get from stemcell rolling
  upgrades depends on how you have configured network partition handling and the
  **Resource Config** tab.
  An HAProxy instance count of 2 and a RabbitMQ node count of 3 are required for rolling stemcell upgrades.
  As of v1.7.7, these counts are the default. 
  For more information, see [Clustering and Network Partitions](./partitions.html).

* Ops Manager ensures the instances are updated with the new packages and any
configuration changes are applied automatically.

* For issues with upgrading RabbitMQ for PCF,
  see [Troubleshooting On-Demand RabbitMQ for PCF](./troubleshoot.html).

## <a id="downtime"></a> Downtime When Upgrading

A guide for downtime during upgrade deployments is shown in the table below.
In some cases, the RabbitMQ cluster remains available during a tile upgrade,
but individual queues on cluster nodes may be taken offline.

The length of the downtime depends on whether there is a stemcell update to
replace the operating system image or whether the existing VM can just have
the RabbitMQ software updated. Stemcell updates incur additional downtime while
the IaaS creates the new VM.

The RabbitMQ cluster becomes unavailable only when upgrading between specific versions of Erlang or RabbitMQ.
This is stated in the release notes for those versions.

<p class="note warning"><strong>IMPORTANT</strong>: The following table is only a guide.
Always check the release notes for the version you are upgrading to.</p>


<table border="1" class="nice">
<tr>
  <th>Upgrade Type</th>
  <th>Will Downtime Be Required For This Upgrade / Update </th>
</tr>
<tr>
  <th>Major Tile Version</th>
  <td>The RabbitMQ cluster is taken offline for the duration of the upgrade.
  </td>
</tr>
<tr>
  <th>Minor Tile Version</th>
  <td>The RabbitMQ cluster is taken offline for the duration of the upgrade.
  </td>
</tr>
<tr>
  <th>Patch Tile Version</th>
  <td>Normally these are rolling deployments with each node being updated in turn.
      In these cases the cluster remains available, but individual queues may be taken offline as each node is restarted.
      There are specific migration paths that require downtime, which are identified in the release notes for that version. 
  </td>
<tr>
  <th>Stemcell-Only Patch Tile Version</th>
  <td>Where the patch update is only a new stemcell version these are rolling deployments with each node being updated in turn.
      In these cases the cluster remains available, but individual queues may be taken offline as each node is restarted.
  </td>
</tr>
</table>

## <a id="upgrade"></a> Upgrade to RabbitMQ for PCF v1.13

As of v1.13, RabbitMQ for PCF no longer supports RabbitMQ v3.6.
Manual steps are required to upgrade both the pre-provisioned and the on-demand service to RabbitMQ for PCF v1.13.
This is due to incompatibilities between RabbitMQ versions v3.6 and v3.7,
as well as a major Erlang update provided by RabbitMQ for PCF v1.13.

Due to these constraints, you cannot do a  rolling upgrade of the cluster for this tile release. 

### <a id="upgrade-preprovisioned"></a> Upgrade the Pre-Provisioned Service

RabbitMQ for PCF v1.13 deploys RabbitMQ v3.7 to run the pre-provisioned
service. All previous versions deploy RabbitMQ v3.6. 

To upgrade the pre-provisioned service, also known as the multitenant service or p-rabbitmq, you
must stop all but one node in the RabbitMQ cluster, perform an upgrade, and then start the additional
nodes.
This process has downtime for the duration of the upgrade steps.

#### Recommendations for Users of Mirrored Queues

As you shut down each node, the mirrored queues will sync to the remaining nodes. 
The remaining nodes will require additional RAM and disk space to accommodate this additional data.

Pivotal recommends draining the queues before attempting the upgrade as this speeds up the upgrade process
and minimizes the amount of RAM and disk required.

For more information about syncing mirrored queues, see [Best Practice for Syncing Queues](./policies.html#syncing_queues).

#### Upgrade RabbitMQ for PCF Pre-Provisioned Service

To upgrade the pre-provisioned service to RabbitMQ for PCF v1.13, do the following:

1. Ensure that your RabbitMQ cluster has sufficent RAM and disk space. 

    To increase RAM and disk space, click the **Resource Config** tab, 
    and then for the **RabbitMQ node**, select an appropriate **VM Type**.

1. Disable automatic synchronization.<br><br>

    Change any automatic synchronization policy you may have to be manual using `ha-sync-mode: manual`.
    This prevents data replication when shutting down nodes during upgrade.
    The remaining nodes will not create new replicas, therefore, memory and disk
    requirements will be significantly lower.

1. Ensure that your RabbitMQ cluster has sufficient persistent disk.

    <br>Disk usage may double during this upgrade as RabbitMQ creates a backup of the persistent database and
     performs the database migration.

    <br>Ideally, persistent disk usage should not exceed 40% of the disk size. For example:<br><br>
      * You have RabbitMQ server nodes with 30GB persistent disk.
      * Pre-upgrade persistent disk usage is 15GB.
      * Persistent disk usage jumps to 30GB during upgrade.
      * The file system reserves 5% of persistent disk for the root user.
      
      In this case, increase the persistent disk size to at least 32GB, and preferably 40GB.

1. If RabbitMQ runs out of disk space during upgrade it will abort the process and
the node won't start. In this case, do the following:
    1. Click the **Resource Config** tab.<br><br>

    1. Increase the disk size by selecting a different **VM Type** for the **RabbitMQ Node**.<br><br>

    1. Click **Apply Changes**.

    RabbitMQ attempts the backup and database migration
    process automatically on the next startup.

1. Drain your message queues as much as possible by stopping the producers
   and allowing the consumers to empty the queues. <br><br>

    To find out which queues currently store the most messages, use the RabbitMQ Management Dashboard or the `rabbitmqadmin list queues name
    message_bytes` command .

    <p class="note"><strong>Note</strong>: Ideally, all queues in RabbitMQ should be empty or almost empty. 
    Upgrading with more data stored in RabbitMQ
    significantly increases memory and disk requirements, and extends the
    upgrade duration.</p>

1. Ensure there are no disk space or memory alarms:<br>
    1. Go to https://pivotal-rabbitmq.system_domain, and log in with the credentials from the RabbitMQ tile configuration, shown below.
    ![admin-credentials](rmq-admin-cred.png)
    1. In the **Overview** tab, check the **Nodes** section for alarm status.

1. In the RabbitMQ Management UI, ensure the cluster is healthy. 

    <br>Do not rely on the BOSH `instances` output. That indicates the state of the Erlang VM, not RabbitMQ.

    <p class="note warning"><strong>WARNING</strong>: Do not attempt the upgrade 
    if there are active alarms or if the cluster is not in a healthy state.</p>

1. Use the BOSH CLI to stop the HAProxy node.  

    <br>The command looks similar to this: `bosh -d p-rabbitmq-... stop rabbitmq-haproxy`.<br><br>
    * If you have multiple HA Proxy nodes, stop all of them
    * If you are using an external load balancer, stop forwarding connections to
      RabbitMQ server nodes (unless your are not concerned with losing some
      messages)

    At this point, applications will no longer be able to communicate with the RabbitMQ service.

1. Use the BOSH CLI to stop one of the RabbitMQ server nodes. 

    <br>The command looks similar to this: <br>`bosh -d p-rabbitmq-... stop rabbitmq-server/NODE_INDEX`

1. Repeat the above step until you have only one node running. 

    <br>To easily keep track of your progress, Pivotal recommends that you stop all nodes except for the node with index 0.

1. Download and install the RabbitMQ for PCF v1.13 tile.

    <br>Follow the steps in Follow the steps in [Download and Install RabbitMQ for PCF](./install-config.html#install).

    <br>Adjust the configuration settings if necessary. Pivotal recommends you do not make any adjustments unless they are to increase the disk or RAM.

1. Turn off the errands.

    <br>Pivotal recommends turning these errands off in the tile GUI. 
    The errands fail if you leave them on, since the RabbitMQ HAProxy was stopped.

1. In the Ops Manager Dashboard, click **Apply Changes**.

    <br>You should now have a single RabbitMQ node running with RabbitMQ version 3.7

1. Start all the nodes you stopped previously.

    1. Run a BOSH command similar to this:<br>
    `bosh -d p-rabbitmq-... start rabbitmq-server/NODE_INDEX`<br><br>
    1. Make sure all nodes are running by checking their status in the RabbitMQ Management Dashboard.

1. Start the HAProxy node.

    <br>The command looks similar to this: `bosh -d p-rabbitmq-... start rabbitmq-haproxy`

1. Run the following errands with BOSH CLI:
 * Broker Registrar: `bosh -d p-rabbitmq-... run-errand broker-registrar`
 * Register Broker: `bosh -d p-rabbitmq-... run-errand register-broker`
 * Smoke Tests: `bosh -d p-rabbitmq-... run-errand smoke-tests`
 * On Demand Smoke Tests: `bosh -d p-rabbitmq-... run-errand on-demand-broker-smoke-tests`
 * Upgrade all Service Instances: `bosh -d p-rabbitmq-... run-errand upgrade-all-service-instances`

1. Make sure that your apps reconnect to RabbitMQ. 
    <p class="note warning"><strong>Warning</strong>: Some RabbitMQ client libraries do not support 
    automatic reconnection so you may have to restart some apps.</p>

### <a id="Upgrade-ondemand"></a> Upgrade the On-Demand Service

As of v1.13, RabbitMQ for PCF no longer provides on-demand service plans with RabbitMQ v3.6. Therefore, to upgrade to RabbitMQ for PCF v1.13, app developers must migrate
their RabbitMQ v3.6 instances to RabbitMQ v3.7. Using blue-green app deployments, you can do this without downtime.

There are three main steps to upgrade the on-demand RabbitMQ for PCF v1.13:

[Migrate On-Demand Instances from RabbitMQ v3.6 to v3.7](#upgrade-ondemand)

[Check for On-Demand Service Instances Running RabbitMQ v3.6](#existing-ondemand-instances)

[Download and Install the RabbitMQ for PCF Tile](#tile-ondemand)

#### <a id="upgrade-ondemand"></a> Migrate On-Demand Instances from RabbitMQ v3.6 to v3.7

To migrate on-demand instances from RabbitMQ v3.6 to v3.7, do the following:

1. In your existing deployment of RabbitMQ for PCF v1.12, create on-demand RabbitMQ v3.7 service plans. Be sure to configure
the v3.7 on-demand plans to match the configurations of your existing v3.6 on-demand plans.

2. Migrate your on-demand service instances from RabbitMQ v3.6 to v3.7, using blue-green deployments.
  The process you use to do this depends on how much your apps can tolerate downtime.<br><br>
  For guidance on how to do this migration, see the following resources:<br><br>
  * The blog [Blue-Green Application Deployments with RabbitMQ](https://content.pivotal.io/blog/blue-green-application-deployments-with-rabbitmq)<br><br>
  * The video [Blue-Green Deployment of Applications leveraging RabbitMQ](https://www.youtube.com/watch?v=S2oO-t-E38c).


#### <a id="existing-ondemand-instances"></a> Ensure there are no On-Demand Service Instances Running RabbitMQ v3.6

After migration there should be no on-demand service instances running RabbitMQ v3.6. 
You must verify this before upgrading from RabbitMQ for PCF v1.12 to v1.13.

<p class="note"><strong>Note</strong>: The upgrade fails if any on-demand service instances are running RabbitMQ v3.6.</p>

To search for on-demand service instances running RabbitMQ v3.6, do the following:

1. Target the CF deployment used in the environment you want to upgrade.

1. Search for the on-demand service `p.rabbitmq`:

    <pre class="terminal">
       $ cf curl /v2/services?q=label:p.rabbitmq
    </pre>

1. In the output from step 2, find `service_plans_url`. 
This shows the URL for all service plans.
Run `cf curl` against that URL. For example:

    <pre class="terminal">
      $ cf curl /v2/services/SERVICE-GUID/service_plans
    </pre>

    This returns a list of all RabbitMQ for PCF on-demand service plans, 
    which may include plans using RabbitMQ v3.6 and plans using RabbitMQ v3.7.

1. In the list returned above:
  1. Locate the service plans using RabbitMQ v3.6.<br><br>
  1. For each of these service plans, find the property `service_instances_url`, and
    note the URL for that plan. 

1. Run `cf curl` against each URL found in step 4. For example:

    <pre class="terminal">
      $ cf curl /v2/service_plans/SERVICE-PLAN-GUID/service_instances
    </pre>

1. Ensure that the result for each service plan shows zero instances using RabbitMQ v3.6.

#### <a id="tile-ondemand"></a> Download and Install the RabbitMQ for PCF Tile

Follow the steps in [Download and Install RabbitMQ for PCF](./install-config.html#install).

## <a id="policy"></a> Release Policy

When a new version of RabbitMQ is released, a new version of RabbitMQ for PCF is released soon after.

Where there is a new version of RabbitMQ or another dependent software
component, such as the stemcell released due to a critical CVE, Pivotal's goal
is to release a new version of the product within 48 hours.
