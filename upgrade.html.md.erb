---
title: Upgrading RabbitMQ for PCF
owner: London Services
---

RabbitMQ for PCF enables automated upgrades between versions of the product.
In some versions, you might be required to take the RabbitMQ cluster offline. 
Whenever this is necessary, it is noted in the release notes for those versions.

The upgrade paths for each version are detailed in the [Product Compatibility Matrix](https://docs.pivotal.io/resources/product-compatibility-matrix.pdf).

To upgrade on-demand instances from RabbitMQ v3.6 to v3.7,
see [Upgrade On-Demand Instances from RabbitMQ v3.6 to v3.7](#upgrade-ondemand).

## <a id="notes"></a> About the Upgrade

Note the following about the upgrade process:

* Upgrading to a newer version of the product does not cause any loss of data or
configuration.

* It may take busy RabbitMQ nodes a long time to shut down during
the upgrade and you must not interrupt this process.

* The benefit you get from stemcell rolling
  upgrades depends on how you have configured network partition handling and the
  **Resource Config** tab.
  An HAProxy instance count of 2 and a RabbitMQ node count of 3 are required for rolling stemcell upgrades.
  As of v1.7.7, these counts are the default. 
  For more information, see [Clustering and Network Partitions](./partitions.html).

* Ops Manager ensures the instances are updated with the new packages and any
configuration changes are applied automatically.

* For issues with upgrading RabbitMQ for PCF,
  see [Troubleshooting On-Demand RabbitMQ for PCF](./troubleshoot.html).

## <a id="downtime"></a> Downtime When Upgrading

A guide for downtime during upgrade deployments is shown in the table below.
In some cases, the RabbitMQ cluster remains available during a tile upgrade,
but individual queues on cluster nodes may be taken offline.

The length of the downtime depends on whether there is a stemcell update to
replace the operating system image or whether the existing VM can just have
the RabbitMQ software updated. Stemcell updates incur additional downtime while
the IaaS creates the new VM.

The RabbitMQ cluster becomes unavailable only when upgrading between specific versions of Erlang or RabbitMQ.
This is stated in the release notes for those versions.

<p class="note warning"><strong>IMPORTANT</strong>: The following table is only a guide.
Always check the release notes for the version you are upgrading to.</p>


<table border="1" class="nice">
<tr>
  <th>Upgrade Type</th>
  <th>Will Downtime Be Required For This Upgrade / Update </th>
</tr>
<tr>
  <th>Major Tile Version</th>
  <td>The RabbitMQ cluster is taken offline for the duration of the upgrade.
  </td>
</tr>
<tr>
  <th>Minor Tile Version</th>
  <td>The RabbitMQ cluster is taken offline for the duration of the upgrade.
  </td>
</tr>
<tr>
  <th>Patch Tile Version</th>
  <td>Normally these are rolling deployments with each node being updated in turn.
      In these cases the cluster remains available, but individual queues may be taken offline as each node is restarted.
      There are specific migration paths that require downtime, which are identified in the release notes for that version. 
  </td>
<tr>
  <th>Stemcell-Only Patch Tile Version</th>
  <td>Where the patch update is only a new stemcell version these are rolling deployments with each node being updated in turn.
      In these cases the cluster remains available, but individual queues may be taken offline as each node is restarted.
  </td>
</tr>
</table>

## <a id="upgrade"></a> Upgrade RabbitMQ for PCF to v1.13

Manual steps are required to upgrade both the RabbitMQ for PCF pre-provisioned service and the on-demand service.
This is due to incompatibilities between RabbitMQ versions v3.6 and v3.7,
as well as a major Erlang update provided by RabbitMQ for PCF v1.13.
Therefore, a rolling upgrade of the cluster cannot be performed. 

### <a id="upgrade-preprovisioned"></a> Upgrade Pre-Provisioned Service for RabbitMQ for PCF v1.13

<p class="note"><strong>Note</strong>: The following steps are not necessary if you are installing the RabbitMQ for PCF v1.13 tile for the first time.</p>

RabbitMQ for PCF v1.13 deploys RabbitMQ v3.7 to run the pre-provisioned
service. All previous versions deploy RabbitMQ v3.6. 

To upgrade the pre-provisioned service, also known as the multitenant service or p-rabbitmq, you
must stop all but one node in the RabbitMQ cluster, perform an upgrade, and then start the additional
nodes.
This process has downtime for the duration of the upgrade steps.

#### Recommendations for Users of Mirrored Queues

As you shut down each node, the mirrored queues will sync to the remaining nodes. 
The remaining nodes will require additional RAM and disk space to accommodate this additional data.

Pivotal recommends draining the queues before attempting the upgradem as this will speed up the upgrade process
and minimize the amount of RAM and disk required.

For more information about syncing mirrored queues, see [Best Practice for Syncing Queues](./policies.html#syncing_queues).

#### Upgrade RabbitMQ for PCF Pre-Provisioned Service

To upgrade the pre-provisioned service, do the following:

1. Ensure that your cluster has sufficent RAM and disk. 

1. Disable automatic synchronization.<br><br>

    Change any automatic synchronization policy you may have to be manual using `ha-sync-mode: manual`.
    This prevents data replication when shutting down nodes during upgrade.
    The remaining nodes will not create new replicas, therefore, memory and disk
    requirements will be significantly lower.

1. Ensure that your cluster has sufficient persistent disk

      Disk usage may double during this upgrade as RabbitMQ will create a backup of the persistent database and
      then perform the database migration.

      Make sure you have enough disk space before attempting the upgrade.

      Ideally, disk usage should not exceed 40% of the disk size. For example:

      * you have RabbitMQ server nodes with 30GB persistent disk
      * pre-upgrade disk usage is 15GB
      * disk usage will jump to 30GB during upgrade
      * file system reserves 5% for the root user
      * therefore you should increase the disk size to at least 32GB, preferably 40GB

      If RabbitMQ runs out of disk space during upgrade it will abort the process and
      the node won't start. In this case go to Resource Config, change the disk size
      and apply changes. RabbitMQ will attempt the backup and database migration
      process automatically on next startup.

1. If you can, drain your queues as much as possible by stopping the producers
   and allowing the consumers to empty the queues. Ideally, when performing the
   upgrade, all queues in RabbitMQ should be empty or almost empty. Attempting
   the upgrade with anything more than a few GBs of data stored in RabbitMQ
   significantly increases memory and disk requirements as well as extends the
   overall upgrade duration.

    You can use RabbitMQ management GUI or `rabbitmqadmin list queues name
    message_bytes` command to find out which queues currently store the most messages.

1. Make sure there are no disk space or memory alarms
* Go to https://pivotal-rabbitmq.system_domain and log in with the credentials from RabbitMQ tile configuration
* Check the Nodes section of the Overview tab for alarm status

1. Ensure the cluster is healthy via the RabbitMQ Management UI. You cannot rely
on the BOSH `instances` output, that reflects the state of Erlang VM, not
RabbitMQ.

    **Do not attempt the upgrade if there are active alarms and make sure the cluster is in a healthy state.**
    Go back to prior steps and make sure you have enough memory and disk before attempting the upgrade.

1. Use BOSH CLI to stop HAProxy node. At this point, applications will no longer be able to communicate with the RabbitMQ service. The command should look like this `bosh -d p-rabbitmq-... stop rabbitmq-haproxy`.
* if you have multiple HA Proxy nodes, stop all of them
* if you are using an external load balancer, stop forwarding connections to
  RabbitMQ server nodes (unless your are not concerned with losing some
  messages)

1. Use BOSH CLI to stop one of the rabbitmq-server nodes: `bosh -d p-rabbitmq-... stop rabbitmq-server/{node_index}`

1. Repeat the above step until you have only one node running. Pivotal recommends that you stop all nodes except for the node with index 0, to easily keep track of your progress.

1. Upload the RabbitMQ for PCF v1.13 tile to OpsManager

1. Adjust the settings if necessary. Pivotal recommends you do not make any adjustments unless they are too increase the disk or RAM.

1. Turn off the errands - since RabbitMQ HAProxy has been stopped, the errands will fail if you leave them on. Pivotal recommends turning these errands off in the tile GUI.

1. Apply Changes

    Once the operation has been completed you should have a single RabbitMQ node running with RabbitMQ version 3.7

    1. Start all nodes you stopped previously:
    `bosh -d p-rabbitmq-... start rabbitmq-server/{node_index}`

1. Make sure all nodes are running. Their status should be visible in RabbitMQ Management GUI.

1. Start HAProxy

1. Run the following errands directly with bosh-cli:
 * Broker Registrar: `bosh -d p-rabbitmq-... run-errand broker-registrar`
 * Register Broker: `bosh -d p-rabbitmq-... run-errand register-broker``
 * Smoke Tests: `bosh -d p-rabbitmq-... run-errand smoke-tests`
 * On Demand Smoke Tests: `bosh -d p-rabbitmq-... run-errand on-demand-broker-smoke-tests`
 * Upgrade all Service Instances: `bosh -d p-rabbitmq-... run-errand upgrade-all-service-instances`

<p class="note warning"><strong>Warning</strong> : Make sure that your Apps reconnect to RabbitMQ. Some RabbitMQ client libraries do not support automatic reconnection and the application must be restarted.</p>

### <a id="upgrade-ondemand"></a> Upgrade On-Demand Instances from RabbitMQ v3.6 to v3.7

Before RabbitMQ for PCF v1.12, on-demand service instances were deployed using RabbitMQ v3.6.
RabbitMQ for PCF v1.12 provides on-demand service plans with RabbitMQ v3.6 and v3.7.

App developers can either start fresh with a v3.7 on-demand instance or they can migrate
their RabbitMQ v3.6 instances to RabbitMQ v3.7 using blue-green app deployments without downtime.

To enable the migration from on-demand v3.6 instances to v3.7 instances, the on-demand v3.7 plans should be configured to mirror the existing v3.6 plans.
For more information,
see the blog [Blue-Green Application Deployments with RabbitMQ](https://content.pivotal.io/blog/blue-green-application-deployments-with-rabbitmq)
and the video [Blue-Green Deployment of Applications leveraging RabbitMQ](https://www.youtube.com/watch?v=S2oO-t-E38c).

RabbitMQ v3.6 on-demand plans will be removed in an upcoming RabbitMQ for PCF tile release.
Encourage all developers to move their apps away from these plans.

#### <a id="existing-ondemand-instances"></a> Check for On-Demand Service Instances Running RabbitMQ v3.6

Before upgrading from RabbitMQ for PCF v1.12 to v1.13,
ensure that there are no on-demand service instances running with RabbitMQ v3.6. 
RabbitMQ v3.6 has been removed from the RabbitMQ for PCF v1.13 tile.
Upgrading fails if any on-demand service instances are running RabbitMQ v3.6.

To search for on-demand service instances running RabbitMQ v3.6, run the
following commands:

1. Target the CF deployment used in the environment you want to upgrade.

1. Search for `p.rabbitmq`, which is the on-demand service offering:

    ```
       cf curl /v2/services?q=label:p.rabbitmq
    ```

1. In the output from step 2, find `service_plans_url`. 
This contains the URL for all service plans.
Run `cf curl` against that URL:

    ```
      cf curl /v2/services/SERVICE-GUID/service_plans
    ```
This returns a list of all RabbitMQ for PCF on-demand service plans, 
which might include plans using RabbitMQ v3.6 as well as plans using RabbitMQ v3.7.

1. Locate the service plans using RabbitMQ v3.6, find the property `service_instances_url` for each of these, and
note the URL for each service plan. 


1. Run `cf curl` against each URL found in step 4:

    ```
      cf curl /v2/service_plans/SERVICE-PLAN-GUID/service_instances
    ```

1. Ensure that the result for each service plan shows zero instances using RabbitMQ v3.6.


## <a id="policy"></a> Release Policy

When a new version of RabbitMQ is released, a new version of RabbitMQ for PCF is released soon after.

Where there is a new version of RabbitMQ or another dependent software
component, such as the stemcell released due to a critical CVE, Pivotal's goal
is to release a new version of the product within 48 hours.
