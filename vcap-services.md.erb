---
breadcrumb: RabbitMQ for Pivotal CF Documentation
title: RabbitMQ Entries in the VCAP_SERVICES Environment Variable
---

Applications running in Cloud Foundry gain access to service instances which are bound to them by credentials passed to them through the <code>VCAP_SERVICES</code> environment variable available to the application. Here is an example:

## Connecting to RabbitMQ best practice

The latest version of RabbitMQ tile 1.4 introduces a new property which is a plural of the existing connection properties.
This is an array of strings and is introduced to handle the scaled out number of HAProxy jobs.

For example with two HAProxy jobs deployed:
<pre><code>
"hostname": "10.0.0.41",
"hostnames": [
 "10.0.0.41",
 "10.0.0.51"
],
</code></pre>

`hostnames` should be used instead of `hostname`, both are maintained for backwards compatibility. The singular versions will eventually be deprecated. 

Most client libraries can handle multiple hostnames being provided and will choose which one to use, in the event of a HAProxy failing.
Alternatively this can be handled in the application. 

## Full Example

<pre><code>
{
 "VCAP_SERVICES": {
  "p-rabbitmq": [
   {
    "credentials": {
     "dashboard_url": "http://pivotal-rabbitmq.your.pcf.com/#/login/b5d0ad14-4352-48e8-8982-d5b1d257029f/tavk86pnnns1ddiqpsdtbchurn",
     "hostname": "10.0.0.41",
     "hostnames": [
      "10.0.0.41",
      "10.0.0.51"
     ],
     "http_api_uri": "http://b5d0ad14-4352-48e8-8982-d5b1d257029f:tavk86pnnns1ddiqpsdtbchurn@10.0.0.41:15672/api",
     "http_api_uris": [
      "http://b5d0ad14-4352-48e8-8982-d5b1d257029f:tavk86pnnns1ddiqpsdtbchurn@10.0.0.41:15672/api",
      "http://b5d0ad14-4352-48e8-8982-d5b1d257029f:tavk86pnnns1ddiqpsdtbchurn@10.0.0.51:15672/api"
     ],
     "password": "tavk86pnnns1ddiqpsdtbchurn",
     "protocols": {
      "amqp": {
       "host": "10.0.0.41",
       "hosts": [
        "10.0.0.41",
        "10.0.0.51"
       ],
       "password": "tavk86pnnns1ddiqpsdtbchurn",
       "port": 5672,
       "ssl": false,
       "uri": "amqp://b5d0ad14-4352-48e8-8982-d5b1d257029f:tavk86pnnns1ddiqpsdtbchurn@10.0.0.41:5672/62e5ab21-7b38-44ac-b139-6aa97af01cd7",
       "uris": [
        "amqp://b5d0ad14-4352-48e8-8982-d5b1d257029f:tavk86pnnns1ddiqpsdtbchurn@10.0.0.41:5672/62e5ab21-7b38-44ac-b139-6aa97af01cd7",
        "amqp://b5d0ad14-4352-48e8-8982-d5b1d257029f:tavk86pnnns1ddiqpsdtbchurn@10.0.0.51:5672/62e5ab21-7b38-44ac-b139-6aa97af01cd7"
       ],
       "username": "b5d0ad14-4352-48e8-8982-d5b1d257029f",
       "vhost": "62e5ab21-7b38-44ac-b139-6aa97af01cd7"
      },
      "management": {
       "host": "10.0.0.41",
       "hosts": [
        "10.0.0.41",
        "10.0.0.51"
       ],
       "password": "tavk86pnnns1ddiqpsdtbchurn",
       "path": "/api",
       "port": 15672,
       "ssl": false,
       "uri": "http://b5d0ad14-4352-48e8-8982-d5b1d257029f:tavk86pnnns1ddiqpsdtbchurn@10.0.0.41:15672/api",
       "uris": [
        "http://b5d0ad14-4352-48e8-8982-d5b1d257029f:tavk86pnnns1ddiqpsdtbchurn@10.0.0.41:15672/api",
        "http://b5d0ad14-4352-48e8-8982-d5b1d257029f:tavk86pnnns1ddiqpsdtbchurn@10.0.0.51:15672/api"
       ],
       "username": "b5d0ad14-4352-48e8-8982-d5b1d257029f"
      }
     },
     "ssl": false,
     "uri": "amqp://b5d0ad14-4352-48e8-8982-d5b1d257029f:tavk86pnnns1ddiqpsdtbchurn@10.0.0.41/62e5ab21-7b38-44ac-b139-6aa97af01cd7",
     "uris": [
      "amqp://b5d0ad14-4352-48e8-8982-d5b1d257029f:tavk86pnnns1ddiqpsdtbchurn@10.0.0.41/62e5ab21-7b38-44ac-b139-6aa97af01cd7",
      "amqp://b5d0ad14-4352-48e8-8982-d5b1d257029f:tavk86pnnns1ddiqpsdtbchurn@10.0.0.51/62e5ab21-7b38-44ac-b139-6aa97af01cd7"
     ],
     "username": "b5d0ad14-4352-48e8-8982-d5b1d257029f",
     "vhost": "62e5ab21-7b38-44ac-b139-6aa97af01cd7"
    },
    "label": "p-rabbitmq",
    "name": "rabbitmq",
    "plan": "standard",
    "tags": [
     "rabbitmq",
     "messaging",
     "message-queue",
     "amqp",
     "stomp",
     "mqtt",
     "pivotal"
    ]
   }
  ]
 }
} 
</code></pre>

The properties of the <code>credentials</code> object serve two purposes. Firstly, for backwards compatibility with other cloud messaging providers, the <code>uri</code>, <code>vhost</code>, <code>username</code>, <code>password</code> and <code>hostname</code> properties are provided directly. However, these will only ever reflect access to RabbitMQ over AMQP 0-9-1. Using these properties is discouraged.

Secondly, a more flexible approach is provided by the <code>credentials.protocols</code> object.
This object has a key per protocol enabled in the RabbitMQ broker. In this example we have the keys <code>amqp</code>,
<code>management</code>, <code>mqtt</code>, and <code>stomp</code>.
Note that if SSL is enabled via the installer, then the keys for <code>amqp</code>, <code>management</code>,
<code>mqtt</code>, and <code>stomp</code> will be
adjusted to <code>amqp+ssl</code>, <code>management+ssl</code>, <code>mqtt+ssl</code>, and <code>stomp+ssl</code> respectively:

The values associated with each of these keys gives access credentials specific to each protocol. In all cases,
a full URI is provided, along with the individual components to facilitate ease of use with client libraries that do not
support the full URIs.

## Updating the VCAP_SERVICES Environment Variable

If you adjust the plugins and protocols enabled for RabbitMQ via the installer, you will need to force the <code>VCAP_SERVICES</code> environment variables to be regenerated. In common with all services in Pivotal Cloud Foundry, the <code>VCAP_SERVICES</code> environment variable for an application is only modified when the application is bound to a service instance. To update it so that it reflects the current set of protocols and features enabled in RabbitMQ, you can restage your application using the CLI with `cf restage <application name>`. This will cause your application to be restaged and have the updated bindings injected.
