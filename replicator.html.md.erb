---
title: Creating Isolation with RabbitMQ for PCF Replicator
owner: Services
---

## <a id="overview"></a> Overview

RabbitMQ for PCF Replicator is a tool that allows you to install multiple RabbitMQ for Pivotal Cloud Foundry (PCF) 
tiles in a single Ops Manager environment. This lets you run multiple preprovisioned RabbitMQ clusters that are isolated from each other. 

For example, you may want to isolate the cluster serving Spring Cloud Services (SCS) from the cluster serving apps in the marketplace. 
Or you may want to give a certain team their own dedicated, preprovisioned cluster that you manage for them. 

To save time in configuring replica tiles, you can use the Config Cloner tool. This tool supplements the functionality of the RabbitMQ for PCF Replicator by letting you configure the RabbitMQ for PCF tile in Ops Manager once, then propagate this configuration to all replica tiles with a single action. For instructions, see [Cloning Configuration for Replica Tiles](#cloning).

### <a id="usecases"></a> Common Use Cases

This section describes four common use cases for the RabbitMQ for PCF Replicator.

The image below shows RabbitMQ for PCF serving SCS on one cluster, while two other clusters are dedicated to specific teams. 
The unreplicated RabbitMQ instance is used as a backing service for SCS, while two replica instances are each dedicated to a specific team.<br><br> 
![alt text](/images/flowchart.png)

These and other common use cases are explained below.

### <a id="scs-isolation"></a> Running SCS on a Dedicated RabbitMQ Cluster

Replica RabbitMQ tiles cannot be used to provide a backing service for Spring Cloud Services (SCS) because SCS expects that 
the service is called `p-rabbitmq`. Therefore, if you want to isolate the RabbitMQ cluster that is used by SCS from other tenants, you can reserve the unreplicated RabbitMQ for PCF tile for SCS, as shown in the diagram below. You can then add replica RabbitMQ clusters for use by apps in the marketplace.

Pivotal recommends that you use the unreplicated RabbitMQ for PCF tile solely for SCS to avoid contention between apps 
using SCS, and apps using RabbitMQ for PCF in the marketplace.  

To reserve the unreplicated tile for SCS, turn off the **Broker Registrar** errand to prevent the 
broker from being exposed in the marketplace. For more information, 
see [Errands](http://docs.pivotal.io/rabbitmq-cf/install-config.html#errands). 

To offer RabbitMQ as a cloud messaging service in the marketplace, create one or several replicas, 
install them in Ops Manager, and either allow the broker registrar errand to run, or 
[register the service manually using CF](https://docs.pivotal.io/pivotalcf/services/managing-service-brokers.html#register-broker).  

### <a id="dedicated"></a> Providing a Preprovisioned Dedicated Cluster

To reserve a RabbitMQ cluster for use by a specific team, all you need to do is 
[disable the broker registrar errand in Ops Manager](http://docs.pivotal.io/rabbitmq-cf/install-config.html#errands). 
This prevents service registration in the marketplace. Once you deploy the tile, manually expose the 
service broker to your desired orgs and spaces. For instructions, see 
[Register a Broker](https://docs.pivotal.io/pivotalcf/services/managing-service-brokers.html#register-broker). 

### <a id="on-demand"></a> Using Replicas While Offering the On-Demand RabbitMQ Service

The On-Demand service is not offered in replica tiles, since the purpose of the replicator is 
to create additional pre-provisioned clusters. If you want to offer on-demand service plans, 
use the unreplicated RabbitMQ for PCF tile as shown in the diagram above. 

### <a id="blue-green"></a> Blue-Green Upgrades (Advanced)

In order to do blue-green style upgrades to minimize downtime, you can stand up a new 
cluster and migrate data and users over to the new cluster over a period of time. 
Speak with your Platform Architect about how to enable this workflow.


## <a id="generate"></a> Generating Replica Tiles

This topic describes how to install the replicator and generate replica tiles of RabbitMQ for PCF.

### <a id="prereqs"></a> Prerequisites

* RabbitMQ for PCF version 1.8.x or 1.9.x
* 2.5 GB of free disk space

### <a id="download"></a> Download and Run the Replicator

You can download the replicator from Pivotal Network. Binaries are available for Linux, Mac, and Windows operating systems. 
Follow these steps to download and run the replicator:

1. Download the RabbitMQ for PCF Replicator from [Pivotal Network](https://network.pivotal.io/).
1. Uncompress the downloaded archive.<br><br>
	This archive includes both the replicator and the [config cloner](#cloning) binaries.

1. Run the replicator binary for your operating system.


### <a id="replica"></a> Generate Replica Tiles

The following is the syntax for generating a replica tile:

```mac
./rabbitmq-replicator-darwin\
--name YOUR_DESIRED_TILE_NAME\
--path PATH_TO_TILE\
--output DESIRED_FILE_NAME.pivotal
```

The following are the parameters expected in the above syntax: 

| **Parameter** | **Description**                                                                                                                                   |
|----------|---------------------------------------------------------------------------------------------------------------------------------------------------|
| `name`     | The desired unique identifier for the replica tile, which is used to generate manifests, deployment names, and marketplace name for the service. Only alphanumeric characters and `-` are accepted by the tool. |
| `path`     | The location of the original, unreplicated, RabbitMQ for PCF source tile that you downloaded                                                                                                         |
| `output`   | The desired file name and path for the replica tile                                                                                              |


## <a id="install"></a> Installing Replica Tiles

Once you have generated a replica tile, you can upload it to Ops Manager as you would any other tile. 
After you have uploaded it, follow the instructions for [Installing and Configuring RabbitMQ for PCF as a 
Pre-Provisioned Service](https://docs.pivotal.io/rabbitmq-cf/install-config-pp.html). 
Note that the On-Demand service is not offered on replica tiles.

To save time in configuring replica tiles, use the Config Cloner as described in the following section.

## <a id="cloning"></a> Cloning Configuration for Replica Tiles

The Config Cloner lets you clone and propagate the tile configuration from one RabbitMQ for PCF tile to all other tiles.

<p class="note"><strong>Note</strong>: The config cloner does not clone credentials and certificates, so you must supply these manually to each replica tile.</p>

### <a id="installconfigcloner"></a> Download and Run the Config Cloner

The Config Cloner is downloaded from Pivotal Network along with the RabbitMQ for PCF Replicator, and binaries are available for Linux, Mac, and Windows operating systems. Follow these steps to download and run the Config Cloner:

1. Download the RabbitMQ for PCF Replicator from [Pivotal Network](https://network.pivotal.io/).
1. Uncompress the downloaded archive.<br><br>
	This archive includes both the [replicator](#overview) and the config cloner binaries.

1. Run the config cloner binary for your operating system. 


#### Prerequisites for Using the Config Cloner

* RabbitMQ for PCF config cloner utility
* A source RabbitMQ for PCF tile
* One or multiple RabbitMQ for PCF replica tiles

### <a id="retrieve-name"></a> Retrieve Source and Destination Tile Deployment Names

Retrieve the deployment names for your source and destination tiles by clicking on each tile in turn, and copying the deployment name from the URL. The deployment name is highlighted in the example URL shown below:
<br><br>![deployment](configcloner-deployment-name.png)

### <a id="propagate"></a> Propagate Configuration from One Tile to Another

Use the config cloner as described below, using the source and destination deployment names you retrieved above. After cloning configurations for one or more tiles, supply the credentials and certificates for each tile, and then **Apply Changes** in Ops Manager. 

The following is the syntax for using the config cloner:

```mac
./config-cloner \
--source SOURCE_TILE_DEPLOYMENT_NAME \
--destination DESTINATION_TILE_DEPLOYMENT_NAME \
--opsmanager-url YOUR_OPS_MANAGER_URL \ 
--opsmanager-username YOUR_OPS_MANAGER_USERNAME \
--opsmanager-password YOUR_OPS_MANAGER_PASSWORD
```

The following parameters are expected in the above syntax:

| **Parameter**            | **Description**                                                                                                                                                                 |
|---------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| `source`              | The deployment name of the tile from which you want to copy the configuration                                                                                                              |
| `destination`         | The deployment name(s) of the tile(s) to which you want to push the configuration. If you have more than one destination tile, you can supply a comma separated list of deployment names.  |
| `opsmanager-url`      | The domain name or IP address of your Ops Manager                                                                                                                               |
| `opsmanager-username` | Your Ops Manager username                                                                                                                                                       |
| `opsmanager-password` | Your Ops Manager password                                                                                                                                                       |

<p class="note"><strong>Note</strong>:
The Config Cloner does not clone credentials and certificates, so you must supply these manually to each replica tile.
</p>


## <a id="upgrading"></a> Upgrading Replica Tiles

You can upgrade replica tiles like regular tiles with one important difference. 
You must generate a replica of the newer version of the RabbitMQ for PCF tile, using the replicator, 
and give the new replica the same `name` as the existing replica. This is shown in the example workflow below.

### Example of an In-Place Upgrade of a Replica

Suppose you used the replicator to generate a replica of v1 of the RabbitMQ for PCF tile, 
with the `name` **trading-team**, and you installed it in Ops Manager. 
Here is the sample replicator command you used for the initial installation:

```mac
./rabbitmq-replicator-darwin\
--name trading-team\
--path /download/p-rabbitmq-v1.pivotal\
--output /output/p-rabbitmq-v1-trading-team.pivotal
```

To upgrade to v2, follow these steps: 

1. Download the new RabbitMQ for PCF v2. 

2. Run the replicator command, using the path to the new RabbitMQ for PCF v2 tile, and supply 
the same `name`, **trading-team**, as shown below.

    ```mac
    ./rabbitmq-replicator-darwin\
    --name trading-team\
    --path /download/p-rabbitmq-v2.pivotal\
    --output /output/p-rabbitmq-v2-trading-team.pivotal
    ```

3. Once you have the replica tile **p-rabbitmq-v2-trading-team.pivotal**, upload it to Ops manager. 
This upgrades the v1 replica tile in place. 

You can then proceed with upgrading the cluster.

If you want to do a blue-green style upgrade, see [Blue-Green Upgrades](#blue-green).


## <a id="limitations"></a> Limitations

* The On-Demand service is not offered on replica tiles.

* The Config Cloner does not clone credentials and certificates, so you must supply these manually for each RabbitMQ for PCF tile.

