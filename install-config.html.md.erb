---
title: Installing and Configuring RabbitMQ for PCF as an On-Demand Service
owner: London Services
---

This topic provides instructions to Pivotal Cloud Foundry (PCF) operators about how to install, configure, and deploy the RabbitMQ for PCF tile to provide on-demand service.

<p class="note"><strong>Note</strong>: For instructions on how to install, configure, and deploy the RabbitMQ for PCF tile
as a pre-provisioned service, see
<a href="./install-config-pp.html">the documentation for pre-provisioned RabbitMQ for PCF</a>.</p>

## <a id="prerequisites"></a> Prerequisites for Deploying the On-Demand Service

Before deploying RabbitMQ for PCF as an on-demand service, you must ensure that the required network rules are in place to allow various components to communicate.

See [Required Networking Rules for On-Demand Services](about.html#network-rules) for details on the network connections that must be open to enable the on-demand service.

For information on the on-demand service architecture, see [this page](about.html).

## <a id="install"></a> Download and Install RabbitMQ for PCF

1. Download the product file from [Pivotal Network](https://network.pivotal.io/products/pivotal-rabbitmq-service/).

2. Navigate to the Ops Manager Installation Dashboard and click **Import a Product** to upload the product file.

3. Under the **Import a Product** button, click **+** next to the version number of RabbitMQ for PCF. This adds the tile to your staging area.

4. Click the newly added **RabbitMQ for PCF** tile to configure the service.

## <a id="tile_configurations"></a> Configure RabbitMQ for PCF

The configuration screen appears when you click the RabbitMQ for PCF tile in Ops Manager:

![Configuring Errand Run Rules](images/errands-pane.png)

### <a id="azs-networks"></a>  Configure AZs and Networks

 Follow the steps below to configure the AZs and networks.

 1. Click **Assign AZs and Networks**.
     <p class="note warning"><strong>Important</strong>: You cannot change the regions or networks after you have clicked **Apply Changes** in the [final step](#apply-changes) below.</p>

 2. Configure the fields on the **Assign AZs and Networks** as follows:
   <table>
     <tr><th>Field</th><th>Instructions</th></tr>
     <tr><td><strong>Place singleton jobs in</strong></td>
         <td>Select the region that you want for singleton VMs. PCF creates the RabbitMQ broker in this AZ.</td></tr>
     <tr><td><strong>Balance other jobs in</strong></td>
         <td>Select additional region. This selection does not affect the on-demand RabbitMQ for PCF service.</td></tr>
     <tr><td><strong>Network</strong></td>
         <td>Select a network for the RabbitMQ On-Demand Broker.<br><br>
             This should be a separate network from the one you select for <strong>Service Network</strong>. This network is represented by the Default Network in this <a href="./about.html#on-demand">picture</a>.
             Typically, you select the network used for the Pivotal Elastic Runtime components.
         </td></tr>
     <tr><td><strong>Service Network</strong></td>
         <td> Select a separate network that the on-demand service instances run on.<br><br>
              A typical practice is to put all on-demand services on a single network, separate from the network that ERT and the On-Demand Broker run on.  
              This network is represented by the Services Network in this <a href="./about.html#on-demand">picture</a>. <br><br>
              This field is also required for the pre-provisioned service, though in that case, it doesn't matter which network you select.</td></tr>
   </table>

    <p class="note warning"><strong>WARNING</strong>: Changing the Network or Service Network, or changing their IP configurations,
       results in a failed deployment.
       For more information, see <a href="./changing-ips.html">Changing Network or IP Addresses Results in a Failed Deployment</a>.</p>

 3. Click **Save**.

### <a id="global"></a>Configure Global Settings

Follow the steps below to configure global settings.

1. Click **Dedicated Instance: Global Settings** and configure the following:<br><br>
  * **Service instance quota**  min: 0, max: 50  set the total number of dedicated service instances which can be deployed.<br><br>
  * **VM options**:<br><br>
       **Allow outbound internet access (IaaS-dependent)**. This checkbox must be ticked to allow external log forwarding, sending backup artifacts to external destinations, and communicating with an external BOSH blob store.
1. Click **Save**.

### <a id="service-plan"></a> Configure the Service Plan

In order to enable the on-demand service plan(s), you must configure the  **Dedicated Instance: Single Node Plan** or **Dedicated Instance: Cluster Plan**.

**Dedicated Instance: Single Node Plan**: It is a single node of RabbitMQ Server.
**Dedicated Instance: Cluster Plan**: It is a cluster with three to seven RabbitMQ Server nodes.


<p class="note"><strong>Note</strong>: If the ODB feature is not enabled, the ODB is deployed alongside the RabbitMQ installation, but it is not available in the Marketplace.</p>


1. Choose the dedicated service instance you want to configure, Single Node Plan and/or Cluster Plan:

     ![service-plan-tab-v1.10.0](service-plan-configuration.png)

2. Configure the fields as follows:
  <table>
    <tr><th>Field</th><th>Instructions</th></tr>
    <tr><td><strong>Enable this plan</strong></strong></td>
        <td>Select plan enable.</td></tr>
    <tr><td><strong>CF Service Access</strong></strong></td>
    <td>For the Cluster Plan, select an access level.
        This setting is enabled by default.
        If you change this default setting, the smoke tests fail.
        Therefore, disable the smoke tests [errand](#errands) for this plan if you change the default.<br>
      <br><ul>
        <li>**Enable Service Access**---Gives access to all orgs, and displays the service plan to all developers in the Marketplace.
        </li>
        <li>**Disable Service Access**---Disables access to all orgs, and hides the service plan to all developers in the Marketplace. This setting cannot be selected at a later time in the UI.
        </li>
        <li>**Leave Service Access Unchanged**---Keeps any existing access settings, and only displays the service plan in the Marketplace to members of orgs that have access to the plan. You can [change the access settings](#access) later manually using the cf CLI.
        </li>
      </ul></td></tr>
    <tr><td><strong>Plan name</strong></td>
        <td>Accept the default or enter a name. This is the name that appears in the Marketplace.</td></tr>
    <tr><td><strong>Plan description</strong></td>
        <td>Accept the default or enter a description.</td></tr>
    <tr><td><strong>Service instance quota</strong></td>
        <td>Enter the maximum number of dedicated service instances that can be available at one time.</td></tr>
    <tr><td><strong>Plan features</strong></td>
        <td>Accept the default or enter information about the plan to help your app developers.</td></tr>
    <tr><td><strong>Number of nodes</strong></strong></td>
        <td>Enter 3, 5 or 7. This setting only affects new service instances.
            Previously deployed service instances are **not** updated.</td></tr>
    <tr><td><strong>Network partition behaviour</strong></strong></td>
        <td>Select pause minority or autoheal. Pivotal recommends using pause minority.
            For more information, see <a href="./partitions.html">the partitions documentation</a>.</td></tr>
    <tr><td><strong>RabbitMQ VM Type</strong></td>
        <td>Select a large VM type.<br>The plan will create a service instance of this size.</td></tr>
    <tr><td><strong>Persistent disk type</strong></td>
    <td>This is where RabbitMQ pages messages to disk.
    Service instance deployments fail if this value is less than twice the volume of RAM of the selected RabbitMQ VM Type.
    For more information, see <a href="#resources">Resource Types and Disk Size Concerns</a> below.</td></tr>
    <tr><td><strong>AZ placement</strong></td>
    <td>This field becomes available after you have completed the [Assign AZs and Networks](#azs-networks) page.
        <br>For a single-node plan, select one or more AZs. For a cluster plan, select only one AZ.
        <br>Pivotal recommends deploying a cluster plan to only one AZ to minimize risk of partitions.
    </td></tr>
  </table>

    <p class='note warning'><strong>Important</strong>: If you change this configuration after you have selected AZs and deployed service instances,
       existing instances are <strong>not</strong> placed in the newly configured AZs when the <strong>Upgrade All Service Instances</strong> errand is run.
       This prevents re-creation of the VMs in different AZs, which can lead to data loss.
       <br>All new service instances, however, will be created in the newly configured AZs.</p>

    <p class='note'><strong>Note</strong>: To determine which AZs a service instance is placed in, do one of the following:<br><br>
      &#9702; Retrieve the service GUID using the <code>cf service SERVICE_INSTANCE --guid</code> command
       and then run the <code>bosh instances</code> command for the <code>service-instance_GUID</code> deployment.<br><br>
      &#9702; With syslog forwarding enabled, inspect the service broker logs 
          when running the <strong>Upgrade All Service Instances</strong> errand. For each existing service instance, the log message includes the service instance GUID and the AZs the service instance is running in.</p>

3. Click **Save**.

#### <a id="access"></a> Change Access to Service Plans Manually

You might want to restrict access to a service plan, enabling it only for a specific org.

<p class="note"><strong>Note</strong>: If the plan you are restricting is currently enabled for all orgs,
   you must first <strong>Disable Service Access</strong> for the plan, then grant access to the plan to specific orgs.
   See the <strong>CF Service Access</strong> field in the above table.</p>

To enable access to a plan for a specific org, run this command:

`cf enable-service-access p.rabbitmq -p PLAN_NAME -o ORG_NAME`

For example:

<pre class="terminal">
  $ cf enable-service-access p.rabbitmq -p my-cluster-plan -o my-dev-org
</pre>

For more information on the above command, see [Enable Access to Service Plans](https://docs.cloudfoundry.org/services/access-control.html#enable-access).

#### <a id="resources"></a> Resource Types and Disk Size Concerns

It is possible to configure the VM type for RabbitMQ and the size of the persistent disk that is going to be attached to the RabbitMQ instances.
Suggested value is 2x the amount of RAM of the selected VM type. Refer to the PCF RabbitMQ documentation for more details.

<%= image_tag("images/vm-ram-disk-example.png") %>

RabbitMQ raises alarms when disk space drops below the configured limit.
Incorrect disk sizes may cause the deployed instance not to start.
RabbitMQ declines to start if there is not enough space available according to the threshold.

Dedicated instances are configured with a threshold set to the 150% of the memory (RAM) of the VM.
Use the following table as a guide when selecting the size of the persistent disk.

The following table shows an example of possible RAM values, absolute minimal value below which
RabbitMQ declines to start, and the disk size suggested for an average use case.

<table border="1" class="nice">
  <tr>
    <th>RAM</th>
    <th>Free disk alarm threshold (1.5xRAM)</td>
    <th>Suggested disk size (2xRAM)</th>
  <tr>
  <tr>
    <td>10 GB</td>
    <td>4 GB</td>
    <td>20 GB</td>
  <tr>
  <tr>
    <td>16 GB</td>
    <td>6.4 GB</td>
    <td>32 GB</td>
  <tr>
  <tr>
    <td>32 GB</td>
    <td>12.8 GB</td>
    <td>64 GB</td>
  <tr>
</table>


For more information, see the following:

+ [Memory and Disk Alarms](http://www.rabbitmq.com/alarms.html)
+ [Disk Alarms](http://www.rabbitmq.com/disk-alarms.html)

### <a id="stemcell"></a> Verify the Stemcell

1. Click **Stemcell**.

2. Verify and, if necessary, import a new stemcell version.
    For more information, see the information about importing the stemcell for your IaaS:
    [AWS](https://docs.pivotal.io/pivotalcf/1-11/customizing/pcf-aws-manual-er-config.html#stemcell),
    [Azure](https://docs.pivotal.io/pivotalcf/customizing/azure-er-config.html#stemcell),
    [GCP](https://docs.pivotal.io/pivotalcf/customizing/gcp-er-config.html#stemcell), or
    [vSphere](https://docs.pivotal.io/pivotalcf/customizing/config-er-vmware.html#stemcell).


### <a id="apply-changes"></a> Apply Changes from your Configuration

Your installation is not complete until you apply your configuration changes. Follow the steps below:

1. Return to the Ops Manager Installation Dashboard.

2. Click **Apply Changes**.

## <a id='logging'></a>Configure Logging to Monitor RabbitMQ for PCF

Pivotal recommends that you configure logging to monitor the health of RabbitMQ for PCF. Follow [this procedure](./monitor.html#config) to configure logging.

## <a id='errands'></a>Errands

When deploying or updating RabbitMQ for PCF, Ops Manager can optionally run a series of [post-deploy errands](#post-deploy-errands). An example is the `Smoke Tests` errand, which checks the health of the RabbitMQ cluster after a deploy or upgrade.

You can decide whether to run errands by toggling them on or off before an update. This is a one-time setting on the installation dashboard:

![Configuring One-time Errands](images/errands-installation.png)

<p class='note warning'><strong>Important</strong>: As of RabbitMQ for PCF v1.9.0, all post-deploy errands are on by default.
    Pivotal recommends keeping these defaults, because the smoke tests can encounter unexpected issues,
    and dedicated instances of RabbitMQ for PCF may fall behind
    if the <strong>Upgrade All Service Instances</strong> errand is not on by default.</p>

However, if necessary, you can change these defaults by clicking **Errands** in the RabbitMQ for PCF **Settings** tab.

For more information on errand run rules, see the [Ops Manager documentation](https://docs.pivotal.io/tiledev/tile-errands.html#run-rules).

### <a id='post-deploy-errands'></a>Post-Deploy Errands

<table class="nice">
  <th>Errand</th>
  <th>Description</th>
  <tr>
    <td><strong>Broker Registrar</strong></td>
    <td>Makes the pre-provisioned RabbitMQ service plans available in the Marketplace</td>
  </tr>
  <tr>
    <td><strong>Smoke Tests</strong></td>
    <td>Checks that a pre-provisioned RabbitMQ service instance can be bound to a Cloud Foundry app, and that the app can
    publish and subscribe to a RabbitMQ cluster (<a href="#smoke_test_process">details</a> below)</td>
  </tr>
  <tr>
    <td><strong>Register On-Demand Service Broker</strong></td>
    <td>Makes the on-demand RabbitMQ service plans available in the Marketplace. If you change the Service Plan Configuration,
    you must run this errand in order for the changes to be reflected in the Marketplace.</td>
  </tr>
  <tr>
    <td><strong>Dedicated Instance Smoke Tests</strong></td>
    <td>Checks that on-demand RabbitMQ service instances can be bound to a Cloud Foundry app, and that the app can
    publish and subscribe to a RabbitMQ cluster (<a href="#dedicated_instance_smoke_test_process">details</a> below)</td>
  </tr>
  <tr>
    <td><strong>Upgrade All Service Instances</strong></td>
    <td>On-demand instances are updated and redeployed if there are changes to the Dedicated Instance settings or the
    tile is upgraded. If this errand is set to "Off" or "When Changed", updates to Dedicated Instance settings will <strong>not</strong>
    be applied to existing service instances. <strong>Pivotal strongly recommends that this errand is configured to always run</strong>.</td>
  </tr>
</table>

### <a id='pre-delete-errands'></a>Pre-Delete Errands

<table class="nice">
  <th>Errand</th>
  <th>Description</th>
  <tr>
    <td><strong>Broker Deregistrar</strong></td>
    <td>Removes the pre-provisioned RabbitMQ service from the Marketplace and deletes all associated service instances and bindings</td>
  </tr>
  <tr>
    <td><strong>Delete All Service Instances</strong></td>
    <td>Unbinds and deletes existing dedicated service instances.
    The duration of this errand depends on the number of deployed dedicated instances.</td>
  </tr>
  <tr>
    <td><strong>Deregister On-Demand Service Broker</strong></td>
    <td>Removes the on-demand RabbitMQ service from the Marketplace</td>
  </tr>
</table>



### <a id="smoke_test_process"></a> Smoke Test Process

The smoke tests perform the following for each available service plan:

1. Target the org <code>system</code> and create a cf space to run the tests.
1. Deploy an instance of the [CF RabbitMQ Example App](https://github.com/pivotal-cf/rabbit-example-app) in this cf space.
1. Create a RabbitMQ service instance and bind it to the CF RabbitMQ Example App.
1. Check that the CF RabbitMQ Example App can write to, and read from, the RabbitMQ service instance.
1. Clean up the deployed Example App and all its service bindings.
1. Delete the cf space created for the tests.

### <a id="dedicated_instance_smoke_test_process"></a> Dedicated Instance Smoke Test Process

The smoke tests perform the following for each enabled service plan:

1. Create and target the org <code>smoke-test-org</code> and the space <code>smoke-test-space</code> to run the tests.
1. Deploy an instance of the [CF RabbitMQ Example App](https://github.com/pivotal-cf/rabbit-example-app) in this cf space.
1. Create the RabbitMQ cluster and bind it to the CF RabbitMQ Example App.
1. Check that the CF RabbitMQ Example App can write to, and read from, the RabbitMQ service instance.
1. Clean up the deployed Example App and all its service bindings.
1. Delete the cf org and space created for the tests.

## <a id="admin-service-key"></a>Create an Admin User for a Service Instance

If you want to give app developers admin privileges to the RabbitMQ Management UI, you can create an admin user for a service instance and share the user credentials with app developers.

Both operators and app developers can use this procedure.

To create an admin user on a RabbitMQ instance do the following:

1. Run this command to create a service key:

    <br>`cf create-service-key SERVICE_INSTANCE SERVICE_KEY -c '{"tags": "administrator"}'`

    <br>where:

    <br>`SERVICE_INSTANCE` is the name you supplied when you ran `cf create-service` <br> `SERVICE_KEY` is a name you choose to identify the service key.

    <br>For example:

    <pre class="terminal">
   $ cf create-service-key my-instance my-admin-key -c '{"tags":"administrator"}'<br>
   Creating service key my-admin-key for service instance my-instance as user<span>@</span>example.com...
   OK
</pre>

1. Run this command to get the admin user credentials:

    <br>`cf service-key SERVICE_INSTANCE SERVICE_KEY` where the variables are the same as above.

    <br>This returns a Dashboard URL containing the admin credentials, which can be used to access the management UI. For example:

    <pre class="terminal">
   $ cf service-key my-instance my-admin-key<br>
   Getting key my-admin-key for service instance my-instance as user<span>@</span>example.com...
   {
     "dashboard_url": "https://my-instance.bosh-lite.com/#/login/admin-username/admin-password",
     "username": "admin-username",
     "password": "admin-password",
     ...
   }
</pre>

