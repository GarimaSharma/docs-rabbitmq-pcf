---
title: Installing and Configuring RabbitMQ for PCF as an On-Demand Service
owner: London Services
---

This topic provides instructions to PCF operators about how to install, configure, and deploy the RabbitMQ for PCF tile to provide on-demand service. 

<p class="note"><strong>Note</strong>: For instructions on how to install, configure, and deploy the RabbitMQ for PCF tile 
as a pre-provisioned service, see
<a href="./install-config-pp.html">the documentation for pre-provisioned RabbitMQ for PCF</a>.</p>

## <a id="install"></a> Download and Install RabbitMQ for PCF

1. Download the product file from [Pivotal Network](https://network.pivotal.io/products/pivotal-rabbitmq-service/).

2. Navigate to the Ops Manager Installation Dashboard and click **Import a Product** to upload the product file. 

3. Under the **Import a Product** button, click **+** next to the version number of RabbitMQ for PCF. This adds the tile to your staging area.

4. Click the newly added **RabbitMQ for PCF** tile to configure the service.

## <a id="tile_configurations"></a> Configure RabbitMQ for PCF

The configuration screen appears when you click the RabbitMQ for PCF tile in Ops Manager:

![Configuring Errand Run Rules](images/errands-pane.png)


### <a id="global"></a>Configure Global Settings

Click **Dedicated Instance: Global Settings** and configure the following:
 
- **Service instance quota**  min: 0, max: 50  set the total number of dedicated service instances which can be deployed.
- **VM options**:
  - **Allow outbound internet access (IaaS-dependent)**. For more information, see the Ops Manager documentation. Log forwarding and backups may require internet access.


### <a id="service-plan"></a> Configure the Service Plan

In order to enable the on-demand service plan, you must configure the **Dedicated Instance: Single Node Plan**. The default name of this plan is `Solo`. 

In the Dedicated Instance Single Node Plan, there is a single node in the cluster. However, there is still an `HAProxy` associated with the cluster.

  <p class="note"><strong>Note</strong>: If the ODB feature is not enabled, the ODB is deployed alongside the RabbitMQ installation, but it is not available in the Marketplace.</p>


1. Click **Dedicated Instance: Single Node Plan**. 

     ![service-plan-tab-v1.8.0](service-plan-configuration.png)

2. Configure the fields on the **Dedicated Instance: Single Node Plan** as follows:
  <table>
    <tr><th>Field</th><th>Instructions</th></tr>
    <tr><td><strong>Enable this plan</strong></strong></td>
        <td>Select the checkbox.</td></tr>
    <tr><td><strong>Service instance quota</strong></td>
        <td>Enter the maximum number of dedicated service instances that can be available at one time.</td></tr>
    <tr><td><strong>Plan name</strong></td>
        <td>Accept the default or enter a name. This is the name that appears in the Marketplace.</td></tr>
    <tr><td><strong>Plan description</strong></td>
        <td>Accept the default or enter a description.</td></tr>
    <tr><td><strong>Plan features</strong></td>
        <td>Accept the default or enter information about the plan to help your app developers.</td></tr>
    <tr><td><strong>RabbitMQ VM Type</strong></td>
        <td>Select a large VM type.<br>The plan will create a service instance of this size.</td></tr>
    <tr><td><strong>Persistent disk type</strong></td>
    <td>This is where RabbitMQ will page messages to disk. See <a href="#resources">Disk Size Concerns</a> for more details.</td></tr>
    <tr><td><strong>AZ placement</strong></td>
        <td>Select one AZ for the single node.<br>The plan will create all the on-demand service instance VMs in this AZ.</td></tr>
  </table>
    
3. Click **Save**.



#### <a id="resources"></a> Resource Types and Disk Size Concerns

It is possible to configure the VM type for RabbitMQ and the size of the persistent disk that is going to be attached to the RabbitMQ instances.

<%= image_tag("images/vm-ram-disk-example.png") %>

RabbitMQ raises alarms when disk space drops below the configured limit.
Incorrect disk sizes may cause the deployed instance not to start.
RabbitMQ declines to start if there is not enough space available according to the threshold.

Dedicated instances are configured with a threshold set to the 40% of the memory (RAM) of the VM.
Operators can take the following table as an example when selecting the size of the persistent disk.

The following table shows an example of possible RAM values, absolute minimal value below which 
RabbitMQ declines to start, and the disk size suggested for an average use case.

<table border="1" class="nice">
  <tr>
    <td>RAM</td>
    <td>Free disk alarm threshold (0.4xRAM)</td>
    <td>Suggested disk size (2xRAM)</td>
  <tr>
  <tr>
    <td>10 GB</td>
    <td>4 GB</td>
    <td>20 GB</td>
  <tr>
  <tr>
    <td>16 GB</td>
    <td>6.4 GB</td>
    <td>32 GB</td>
  <tr>
  <tr>
    <td>32 GB</td>
    <td>12.8 GB</td>
    <td>64 GB</td>
  <tr>
</table>


For more information, see the following documentation links:

+ [Alarms overview](http://www.rabbitmq.com/alarms.html)<br></br>
+ [Disk Alarms](http://www.rabbitmq.com/disk-alarms.html)

### <a id="stemcell"></a> Verify the Stemcell

1. Click **Stemcell**.

2. Verify and, if necessary, import a new stemcell version.  
    For more information, see the information about importing the stemcell for your IaaS:
    [AWS](https://docs.pivotal.io/pivotalcf/customizing/cloudform-er-config.html#stemcell),
    [Azure](https://docs.pivotal.io/pivotalcf/customizing/azure-er-config.html#stemcell), 
    [GCP](https://docs.pivotal.io/pivotalcf/customizing/gcp-er-config.html#stemcell), or
    [vSphere](https://docs.pivotal.io/pivotalcf/customizing/config-er-vmware.html#stemcell).


### <a id="apply-changes"></a> Apply Changes from your Configuration

Your installation is not complete until you apply your configuration changes. Follow the steps below:

1. Return to the Ops Manager Installation Dashboard. 

2. Click **Apply Changes**.

## <a id='logging'></a>Configure Logging to Monitor RabbitMQ for PCF

Pivotal recommends that you configure logging to monitor the health of RabbitMQ for PCF. Follow [this procedure](./monitor.html#config) to configure logging.

## <a id='errands'></a>Errands

When deploying or updating RabbitMQ for PCF, Ops Manager can optionally run a series of [post-deploy errands](#post-deploy-errands). An example is the `Smoke Tests` errand, which checks the health of the RabbitMQ cluster after a deploy or upgrade.

You can decide whether to run errands by toggling them on or off before an update. This is a one-time setting on the installation dashboard:

![Configuring One-time Errands](images/errands-installation.png)

<p class='note'><strong>IMPORTANT</strong>: As of RabbitMQ for PCF v1.9.0, all post-deploy errands are on by default.
    Pivotal recommends keeping these defaults, because the smoke tests can encounter unexpected issues,
    and dedicated instances of RabbitMQ for PCF may fall behind
    if the <strong>Upgrade All Service Instances</strong> errand is not on by default.</p>

However, if necessary, you can change these defaults by clicking **Errands** in the RabbitMQ for PCF **Settings** tab.

For more information on errand run rules, see the [Ops Manager documentation](https://docs.pivotal.io/tiledev/tile-errands.html#run-rules).

### <a id='post-deploy-errands'></a>Post-Deploy Errands

<table class="nice">
  <th>Errand</th>
  <th>Description</th>
  <tr>
    <td><strong>Broker Registrar</strong></td>
    <td>Makes the pre-provisioned RabbitMQ service plans available in the Marketplace</td>
  </tr>
  <tr>
    <td><strong>Smoke Tests</strong></td>
    <td>Checks that a pre-provisioned RabbitMQ service instance can be bound to a Cloud Foundry app, and that the app can
    publish and subscribe to a RabbitMQ cluster (<a href="#smoke_test_process">details</a> below)</td>
  </tr>
  <tr>
    <td><strong>Register On-Demand Service Broker</strong></td>
    <td>Makes the on-demand RabbitMQ service plans available in the Marketplace. If you change the Service Plan Configuration,
    you must run this errand in order for the changes to be reflected in the Marketplace.</td>
      </tr>
  <tr>
    <td><strong>Upgrade All Service Instances</strong></td>
    <td>On-demand instances are updated and redeployed if there are changes to the Dedicated Instance settings or the
    tile is upgraded. If this errand is set to "Off" or "When Changed", updates to Dedicated Instance settings will <strong>not</strong>
    be applied to existing service instances. <strong>Pivotal strongly recommends that this errand is configured to always run</strong>.</td>
  </tr>
</table>

### <a id='pre-delete-errands'></a>Pre-Delete Errands

<table class="nice">
  <th>Errand</th>
  <th>Description</th>
  <tr>
    <td><strong>Broker Deregistrar</strong></td>
    <td>Removes the pre-provisioned RabbitMQ service from the Marketplace and deletes all associated service instances and bindings</td>
  </tr>
  <tr>
    <td><strong>Delete All Service Instances</strong></td>
    <td>Unbinds and deletes existing dedicated service instances.
    The duration of this errand depends on the number of deployed dedicated instances.</td>
  </tr>
  <tr>
    <td><strong>Deregister On-Demand Service Broker</strong></td>
    <td>Removes the on-demand RabbitMQ service from the Marketplace</td>
  </tr>
</table>



### <a id="smoke_test_process"></a> Smoke Test Process

The smoke tests perform the following for each available service plan:

1. Target the org <code>system</code> and create a cf space to run the tests.
1. Deploy an instance of the [CF RabbitMQ Example App](https://github.com/pivotal-cf/rabbit-example-app) this cf space.
1. Create a RabbitMQ service instance and bind it to the CF RabbitMQ Example App.
1. Check that the CF RabbitMQ Example App can write to, and read from, the RabbitMQ service instance.
1. Clean up the deployed Example App and all its service bindings. 
1. Delete the cf space created for the tests.
