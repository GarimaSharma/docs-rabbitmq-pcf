---
title: Monitoring RabbitMQ for PCF as an On-Demand Service
owner: London Services
---

This topic explains how to monitor the health of the RabbitMQ for Pivotal Cloud Foundry (PCF) service using the logs and metrics generated by RabbitMQ for PCF component VMs.

See [Logging and Metrics](http://docs.pivotal.io/pivotalcf/loggregator/index.html) for general information about logging and metrics in PCF.

## <a id="logs"></a>Collect Logs

In RabbitMQ for PCF, you can designate an external syslog endpoint for RabbitMQ logs through Ops Manager at deployment time by performing the following steps:

1. From the Ops Manager Installation Dashboard, click the RabbitMQ tile.
1. In the RabbitMQ tile, click the **Settings** tab.
1. Click **Syslog**.
1. Enter your syslog address and port.
1. Click **Save**.
1. Return to the Ops Manager Installation Dashboard and click **Apply Changes** to redeploy with the changes.

## <a id="logformat"></a>Log Formats

A correctly configured system emits metrics for the RabbitMQ on-demand service broker the service. 
You can identify logs from individual nodes by their index, which corresponds to the index of the 
RabbitMQ nodes displayed in Ops Manager:

* The logs for the RabbitMQ service broker follow the format <code>[job=rabbitmq-broker-partition-GUID index=X]</code>
* WHAT'S THE FORMAT FOR THE ODB RABBITMQ NODE LOGS? The logs for RabbitMQ server nodes follow the format <code>[job=rabbitmq-server-partition-GUID index=X]</code>

RabbitMQ servers are configured to log at the <code>info</code> level, and capture errors, warnings and informational messages.

## <a id="metrics"></a>Metrics

The Loggregator Firehose exposes the RabbitMQ metrics and can direct these metrics to an external endpoint of your choice.

The metrics polling interval defaults to 30 seconds.
This interval is a configuration option on the RabbitMQ tile (**Settings** > **RabbitMQ**).

Metrics are long, single lines of text that follow the format:

```
origin:"p-rabbitmq" eventType:ValueMetric timestamp:1441188462382091652 deployment:"cf-rabbitmq" job:"cf-rabbitmq-node" index:"0" ip:"10.244.3.46" valueMetric: < name:"/p-rabbitmq/rabbitmq/system/memory" value:1024 unit:"MB">
```

###<a id="rabbitmq-metrics"></a>RabbitMQ&nbsp;Metrics

The RabbitMQ on-demand broker emits the following metrics. The full name of each metric follows the format: `/p.rabbitmq/COMPONENT/METRIC-NAME`

REPLACE THE METRICS IN THIS TABLE WITH METRICS FROM THE ON-DEMAND SERVICE BROKER ONLY. 

<table>
    <tr>
        <th>Full Name</th>
        <th>Unit</th>
        <th>Description</th>
    </tr>
    <tr>
        <td><code>/p-rabbitmq/rabbitmq/erlang/erlang_processes</code></td>
        <td>count</td>
        <td>The number of Erlang processes</td>
    </tr>
    <tr>
        <td><code>/p-rabbitmq/rabbitmq/system/memory</code></td>
        <td>MB</td>
        <td>The memory in MB used by the node</td>
    </tr>
    <tr>
        <td><code>/p-rabbitmq/rabbitmq/connections/count</code></td>
        <td>count</td>
        <td>The total number of connections to the node</td>
    </tr>
    <tr>
        <td><code>/p-rabbitmq/rabbitmq/consumers/count</code></td>
        <td>count</td>
        <td>The total number of consumers registered in the node</td>
    </tr>
    <tr>
        <td><code>/p-rabbitmq/rabbitmq/messages/delivered</code></td>
        <td>count</td>
        <td>The total number of messages with the status <code>deliver_get</code> on the node</td>
    </tr>
    <tr>
        <td><code>/p-rabbitmq/rabbitmq/messages/delivered_no_ack</code></td>
        <td>count</td>
        <td>The number of messages with the status <code>deliver_no_ack</code> on the node</td>
    <tr>
        <td><code>/p-rabbitmq/rabbitmq/messages/delivered_rate</code></td>
        <td>rate</td>
        <td>The rate at which messages are being delivered to consumers or clients on the node</td>
    </tr>
    <tr>
        <td><code>/p-rabbitmq/rabbitmq/messages/published</code></td>
        <td>count</td>
        <td>The total number of messages with the status <code>publish</code> on the node</td>
    </tr>
    <tr>
        <td><code>/p-rabbitmq/rabbitmq/messages/published_rate</code></td>
        <td>rate</td>
        <td>The rate at which messages are being published by the node</td>
    </tr>
    <tr>
        <td><code>/p-rabbitmq/rabbitmq/messages/redelivered</code></td>
        <td>count</td>
        <td>The total number of messages with the status <code>redeliver</code> on the node</td>
    </tr>
    <tr>
        <td><code>/p-rabbitmq/rabbitmq/messages/redelivered_rate</code></td>
        <td>rate</td>
        <td>The rate at which messages are getting the status <code>redeliver</code> on the node</td>
    </tr>
    <tr>
        <td><code>/p-rabbitmq/rabbitmq/messages/got _no_ack</code></td>
        <td>count</td>
        <td>The number of messages with the status <code>get_no_ack</code> on the node</td>
    </tr>
    <tr>
        <td><code>/p-rabbitmq/rabbitmq/messages/get _no_ack_rate</code></td>
        <td>rate</td>
        <td>The rate at which messages get the status <code>get_no_ack</code> on the node</td>
    <tr>
        <td><code>/p-rabbitmq/rabbitmq/messages/pending</code></td>
        <td>count</td>
        <td>The number of messages with the status <code>messages_unacknowledged</code> on the node</td>
    </tr>
    <tr>
        <td><code>/p-rabbitmq/rabbitmq/system/file descriptors</code></td>
        <td>count</td>
        <td>The number of open file descriptors on the node</td>
    </tr>
    <tr>
        <td><code>/p-rabbitmq/rabbitmq/exchanges/count</code></td>
        <td>count</td>
        <td>The total number of exchanges on the node</td>
    </tr>
    <tr>
        <td><code>/p-rabbitmq/rabbitmq/messages/available</code></td>
        <td>count</td>
        <td>The total number of messages with the status <code>messages_ready</code> on the node</td>
    </tr>
    <tr>
        <td><code>/p-rabbitmq/rabbitmq/queues/count</code></td>
        <td>count</td>
        <td>The number of queues on the node</td>
    </tr>
    <tr>
        <td><code>/p-rabbitmq/rabbitmq/channels/count</code></td>
        <td>count</td>
        <td>The number of channels on the node</td>
    </tr>
</table>
