---
breadcrumb: RabbitMQ for Pivotal Cloud Foundry Documentation
title: Setting Default Policies for the RabbitMQ Service
owner: London Services
---

## <a id="policy"></a> Understanding a RabbitMQ Policy

You can set a default queue and an exchange policy in the RabbitMQ for Pivotal Cloud Foundry (PCF) tile, to be applied to their RabbitMQ cluster. 
After you deploy the tile, Pivotal recommends that you use the RabbitMQ Management Interface to make configuration changes.

For more information about RabbitMQ policies, see the [RabbitMQ documentation](http://www.rabbitmq.com/parameters.html#policies).

Here is an example policy that ensures messages are mirrored on two nodes: 

```
{
  "ha-mode": "exactly",
  "ha-params": 2,
  "ha-sync-mode": "automatic"
}
```

The following rules apply to polices set through the RabbitMQ for PCF tile:

* A new policy, or an update to a policy, only applies to new instances. Existing instances are not affected by the policy.
* The policy can only be deleted manually from the RabbitMQ nodes.
* Policies can be added dynamically using the RabbitMQ Management Interface.

We would like to remind RabbitMQ for PCF Operators that when a queue syncs all
its messages they need to be loaded into memory. So when queues are syncing
they can use as much memory as there are messages, taking into account the size
of the messages.  This applies to both nodes: the node where the queue master
runs (from node), as well as the node where the queue slave runs (to node).
This is only for newly created queue slaves. This behavior is especially
relevant when any change affects the deployment, e.g.: stemcell updates,
deployment configuration changes, network changes. Make sure you have enough
memory and disk available to support that.

For example:

- If there are 5GB of messages in a mirrored queue that is set to automatic
sync, when this queue needs to sync the node where the queue master runs can
use up to 5GB of memory extra, the same applies to the node where the new queue
slave will be created.

Operators should consider some of the performance implications of making queues and exchanges highly available. For more information on highly available queues, see the [RabbitMQ documentation](https://www.rabbitmq.com/ha.html).

## <a id="viewing"></a> Setting or Changing the Policy

To set ther RabbitMQ policy, do the following:

1. From the Ops Manager Installation Dashboard, click the RabbitMQ for PCF tile, then click **RabbitMQ Policy**.

	<%= image_tag("images/policy_opsman.png") %>

1. Select **Enable custom policy on new instances**. 
1. In the **Policy for new instances** field, paste the policy.

	The policy must be valid JSON and should meet valid RabbitMQ policy criteria.

1. In the **Select the network partition behavior of the RabbitMQ cluster**, choose the desired behavior: **pause_minority** or **autoheal**. 

	<br>For more information on these options, and RabbitMQ clusters and network partitions, see the [RabbitMQ documentation](https://www.rabbitmq.com/partitions.html).

	<br>For production purposes, Pivotal recommends that customers have at least three RabbitMQ server nodes and two HAProxies spread across low latency availability zones.


<p class="note"><strong>Note</strong>: No policy validation occurs during the deployment, and errors can cause the deployment to fail or policies to be applied incorrectly.</p>


## <a id="dashboard"></a> Viewing Policies in the RabbitMQ Management Dashboard

You can view RabbitMQ policies in the RabbitMQ Management Dashboard, shown below. The example policy we entered in the RabbitMQ for PCF tile above is applied to all queues and given a **Priority** of **50**. This allows you to override it by defining another policy with a higher priority.

<%= image_tag("images/policy_config.jpeg") %>

In the **Queues** section shown below, you can see that any new queues created have the policy automatically applied.

<%= image_tag("images/policy_queue.jpeg") %>

<p class="note"><strong>Note</strong>: Developers can obtain the URL of the policy from <code>VCAP_SERVICES</code> for application developers.</p>


