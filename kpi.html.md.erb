---
breadcrumb: RabbitMQ for Pivotal Cloud Foundry Documentation
title: Key Performance Indicators
owner: London Services
---

<p class="note"><strong>Note</strong>: Pre-released DRAFT documentation. </p>

This topic describes Key Performance Indicators (KPIs) that operators may want to monitor with their RabbitMQ for Pivotal Cloud Foundry (PCF) installation to help ensure it is in a good operational state.

The following KPIs are provided for operators to give general guidance on monitoring a RabbitMQ for PCF installation using the product component and system (BOSH) metrics. 
Although many metrics are emitted from RabbitMQ for PCF, the following KPIs are 
high-signal-value metrics that can indicate emerging issues. 

This alerting and response guidance has been shown to apply to most installations. 
Pivotal recommends that operators continue to fine-tune the alert measures to their installation 
by observing historical trends. 
Pivotal also recommends that operators expand beyond this guidance and create new, installation-specific monitoring
metrics, thresholds, and alerts based on learning from their installations.

## <a id="broker"></a> RabbitMQ Service Broker
 
###<a id="broker-heartbeat"></a> Service Broker Heartbeat

<table>
   <tr><th colspan="2" style="text-align: center;"><br> p-rabbitmq.service_broker.heartbeat<br><br></th></tr>
   <tr>
      <th width="25%">Description</th>
      <td>RabbitMQ Service Broker <code>is alive</code> poll, which indicates if the component is available and able to respond to requests.<br><br>
   
      <strong>Use</strong>: If the Service Broker does not emit heartbeats, this indicates that it is offline. The Service Broker is required to create, update, and delete service instances, which are critical for dependent tiles such as Spring Cloud Services and Spring Cloud Data Flow. 
      <br><br>
      <strong>Origin</strong>: Doppler/Firehose<br>
      <strong>Type</strong>: boolean<br>
      <strong>Frequency</strong>: 30 s (default), 10 s (configurable minimum)<br>
   </tr>
   <tr>
      <th>Recommended measurement</th>
      <td>Average over last 5 minutes</td>
   </tr>
   <tr>
      <th>Recommended alert thresholds</th>
      <td><strong>Yellow warning</strong>: N/A<br>
      <strong>Red critical</strong>: &lt; 1</td>
   </tr>
   <tr>
      <th>Recommended response</th>
      <td>
      Check the RabbitMQ Service Broker logs for errors. You can find this VM by targeting your RabbitMQ deployment with BOSH and running <code>bosh vms</code>. 
      </td>
   </tr>
</table>

## <a id="haproxy"></a> RabbitMQ HAProxy
 
###<a id="haproxy-heartbeat"></a> HAProxy Heartbeat

<table>
   <tr><th colspan="2" style="text-align: center;"><br> p-rabbitmq.haproxy.heartbeat<br><br></th></tr>
   <tr>
      <th width="25%">Description</th>
      <td>RabbitMQ HAProxy <code>is alive</code> poll, which indicates if the component is available and 
          able to respond to requests.<br><br>
   
      <strong>Use</strong>: If the HAProxy does not emit heartbeats, this indicates that it is offline. To be functional, service instances require HAProxy.
      <br><br>
      <strong>Origin</strong>: Doppler/Firehose<br>
      <strong>Type</strong>: boolean<br>
      <strong>Frequency</strong>: 30 s (default), 10 s (configurable minimum)<br>
   </tr>
   <tr>
      <th>Recommended measurement</th>
      <td>Average over last 5 minutes</td>
   </tr>
   <tr>
      <th>Recommended alert thresholds</th>
      <td><strong>Yellow warning</strong>: N/A<br>
      <strong>Red critical</strong>: &lt; 1</td>
   </tr>
   <tr>
      <th>Recommended response</th>
      <td>
         Check the RabbitMQ HAProxy logs for errors. You can find the VM by targeting your RabbitMQ deployment with BOSH and running <code>bosh vms</code>, which lists <code>HAProxy_GUID</code>.
      </td>
   </tr>
</table>

## <a id="server"></a> RabbitMQ Server
 
###<a id="server-heartbeat"></a> Server Heartbeat

<table>
   <tr><th colspan="2" style="text-align: center;"><br> p-rabbitmq.rabbitmq.heartbeat<br><br></th></tr>
   <tr>
      <th width="25%">Description</th>
      <td>RabbitMQ Server <code>is alive</code> poll, which indicates if the component is available and 
          able to respond to requests.<br><br>
   
      <strong>Use</strong>: If the server does not emit heartbeats, this indicates that it is offline. To be functional, service instances require RabbitMQ Server. 
      <br><br>
      <strong>Origin</strong>: Doppler/Firehose<br>
      <strong>Type</strong>: boolean<br>
      <strong>Frequency</strong>: 30 s (default), 10 s (configurable minimum)<br>
   </tr>
   <tr>
      <th>Recommended measurement</th>
      <td>Average over last 5 minutes</td>
   </tr>
   <tr>
      <th>Recommended alert thresholds</th>
      <td><strong>Yellow warning</strong>: N/A<br>
      <strong>Red critical</strong>: &lt; 1</td>
   </tr>
   <tr>
      <th>Recommended response</th>
      <td>
         Check the RabbitMQ Server logs for errors. You can find the VM by targeting your RabbitMQ deployment with BOSH and running <code>bosh vms</code>, which lists <code>rabbitmq</code>.

      </td>
   </tr>
</table>

###<a id="free-disk"></a> Free Disk

<table>
   <tr><th colspan="2" style="text-align: center;"><br> derived=(p-rabbitmq.system.disk_free - p-rabbitmq.system.disk_free_limit)<br><br></th></tr>
   <tr>
      <th width="25%">Description</th>
      <td>Free disk capacity for message handling above the configured free disk limit.<br><br>
   
      <strong>Use</strong>: This metric indicates if the system is overloaded.
      <br><br>
      <strong>Origin</strong>: Doppler/Firehose<br>
      <strong>Type</strong>: count (GB)<br>
      <strong>Frequency</strong>: 30 s (default), 10 s (configurable minimum)<br>
   </tr>
   <tr>
      <th>Recommended measurement</th>
      <td>Average over last 10 minutes</td>
   </tr>
   <tr>
      <th>Recommended alert thresholds</th>
      <td><strong>Yellow warning</strong>: &gt; 500<br>
      <strong>Red critical</strong>: </td>
   </tr>
   <tr>
      <th>Recommended response</th>
      <td>
      <ol>
      <li>Investigate what traffic is filling the message queues using the RabbitMQ Management Dashboard. You can get the URL for this dashboard from Apps Manager or the output of the <code>cf service</code> command.</li><li>
      If this metric exceeds the recommended alert value for an extended period, scale the overloaded resource of the <code>rabbit</code> VM in the <b>Resource Config</b> pane of the RabbitMQ tile. This resource may be the persistent disk or the number of nodes.</li>
      </ol>
      </td>
   </tr>
</table>

###<a id="file-descriptors"></a> File Descriptors

<table>
   <tr><th colspan="2" style="text-align: center;"><br> p-rabbitmq.rabbitmq.system.file_descriptors<br><br></th></tr>
   <tr>
      <th width="25%">Description</th>
      <td>File descriptors consumed.<br><br>
   
      <strong>Use</strong>: If the number of file descriptors consumed becomes too large, the VM may lose the ability to perform disk IO, which can cause data loss. 
      <p class="note"><strong>Note</strong>: This assumes non-persistent messages are handled by retries or some other logic by the producers.</p>
      <strong>Origin</strong>: Doppler/Firehose<br>
      <strong>Type</strong>: count<br>
      <strong>Frequency</strong>: 30 s (default), 10 s (configurable minimum)<br>
   </tr>
   <tr>
      <th>Recommended measurement</th>
      <td>Average over last 10 minutes</td>
   </tr>
   <tr>
      <th>Recommended alert thresholds</th>
      <td><strong>Yellow warning</strong>: &gt; 50000 <br>
      <strong>Red critical</strong>: &gt; 55000</td>
   </tr>
   <tr>
      <th>Recommended response</th>
      <td>The default <code>ulimit</code> for RabbitMQ for PCF v1.6 and later is 60000. If this metric is met or exceeded for an extended period of time, consider one of the following actions:
      <ul><li>Scaling the rabbit nodes in the tile <b>Resource Config</b> pane.</li>
      <li>Increasing the <code>ulimit</code></li>
      </td>
   </tr>
</table>

###<a id="erlang-processes"></a> Erlang Processes

<table>
   <tr><th colspan="2" style="text-align: center;"><br> p-rabbitmq.rabbitmq.system.erlang_processes<br><br></th></tr>
   <tr>
      <th width="25%">Description</th>
      <td><a href="https://www.erlang.org/docs">Erlang</a> processes consumed by RabbitMQ, which runs on an Erlang VM.<br><br>
   
      <strong>Use</strong>: This is the key indicator of the processing capability of a node.
      <br><br>
      <strong>Origin</strong>: Doppler/Firehose<br>
      <strong>Type</strong>: count<br>
      <strong>Frequency</strong>: 30 s (default), 10 s (configurable minimum)<br>
   </tr>
   <tr>
      <th>Recommended measurement</th>
      <td>Average over last 10 minutes</td>
   </tr>
   <tr>
      <th>Recommended alert thresholds</th>
      <td><strong>Yellow warning</strong>: &gt; 900000 <br>
      <strong>Red critical</strong>: &gt; 950000</td>
   </tr>
   <tr>
      <th>Recommended response</th>
      <td>The default Erlang process limit in RabbitMQ for PCF v1.6 and later is 1,048,816. If this metric meets or exceeds the recommended thresholds for extended periods of time, consider scaling the RabbitMQ nodes in the tile <b>Resource Config</b> pane.
      </td>
   </tr>
</table>

## <a id="bosh"></a> System (BOSH)

###<a id="ram"></a> RAM

<table>
   <tr><th colspan="2" style="text-align: center;"><br> system.mem.percent <br><br></th></tr>
   <tr>
      <th width="25%">Description</th>
      <td>RAM being consumed by the <code>p-rabbitmq</code> VM.<br><br>
   
      <strong>Use</strong>: RabbitMQ is considered to be in a good state when it has little or no messages. 
              In other words, "an empty rabbit is a happy rabbit." 
              Alerting on this metric can indicate that there are too few consumers or apps that read messages from the queue.
      <br><br>
      Healthmonitor reports when  RabbitMQ uses more than 40% of its RAM for the past ten minutes. 
      <br><br>
      <strong>Origin</strong>: JMX Bridge or BOSH HM<br>
      <strong>Type</strong>: percent<br>
      <strong>Frequency</strong>: 30 s (default), 10 s (configurable minimum)<br>
   </tr>
   <tr>
      <th>Recommended measurement</th>
      <td>Average over last 10 minutes</td>
   </tr>
   <tr>
      <th>Recommended alert thresholds</th>
      <td><strong>Yellow warning</strong>: &gt; 40 <br>
      <strong>Red critical</strong>: &gt; 50</td>
   </tr>
   <tr>
      <th>Recommended response</th>
      <td>Add more consumers to drain the queue as fast as possible. 
      </td>
   </tr>
</table>

###<a id="cpu"></a> CPU

<table>
   <tr><th colspan="2" style="text-align: center;"><br> system.cpu.percent<br><br></th></tr>
   <tr>
      <th width="25%">Description</th>
      <td>CPU being consumed by the <code>p-rabbitmq</code> VM.<br><br>
   
      <strong>Use</strong>: A node that experiences context switching or high CPU usage will become unresponsive. 
      This also affects the ability of the node to report metrics.
      <br><br>
      Healthmonitor reports when RabbitMQ uses more than 40% of its CPU for the past ten minutes.
      <br><br>
      <strong>Origin</strong>: JMX Bridge or BOSH HM<br>
      <strong>Type</strong>: percent<br>
      <strong>Frequency</strong>: 30 s (default), 10 s (configurable minimum)<br>
   </tr>
   <tr>
      <th>Recommended measurement</th>
      <td>Average over last 10 minutes</td>
   </tr>
   <tr>
      <th>Recommended alert thresholds</th>
      <td><strong>Yellow warning</strong>: &gt; 60 <br>
      <strong>Red critical</strong>: &gt; 75</td>
   </tr>
   <tr>
      <th>Recommended response</th>
      <td> Remember that "an empty rabbit is a happy rabbit". Add more consumers to drain the queue as fast as possible.
      </td>
   </tr>
</table>

###<a id="ephemeral-disk"></a> Ephemeral Disk

<table>
   <tr><th colspan="2" style="text-align: center;"><br> system.disk.percent<br><br></th></tr>
   <tr>
      <th width="25%">Description</th>
      <td>Ephemeral Disk being consumed by the <code>p-rabbitmq</code> VM.<br><br>
      <strong>Use</strong>: If system disk fills up, there are too few consumers.
      <br><br>
      Healthmonitor reports when RabbitMQ uses more than 40% of its CPU for the past ten minutes.
      <br><br>
      <strong>Origin</strong>: JMX Bridge or BOSH HM<br>
      <strong>Type</strong>: percent<br>
      <strong>Frequency</strong>: 30 s (default), 10 s (configurable minimum)<br>
   </tr>
   <tr>
      <th>Recommended measurement</th>
      <td>Average over last 10 minutes</td>
   </tr>
   <tr>
      <th>Recommended alert thresholds</th>
      <td><strong>Yellow warning</strong>: &gt; 60 <br>
      <strong>Red critical</strong>: &gt; 75</td>
   </tr>
   <tr>
      <th>Recommended response</th>
      <td>Remember that "an empty rabbit is a happy rabbit". Add more consumers to drain the queue as fast as possible.
      </td>
   </tr>
</table>

###<a id="persistent-disk"></a> Persistent Disk

<table>
   <tr><th colspan="2" style="text-align: center;"><br> persistent.disk.percent<br><br></th></tr>
   <tr>
      <th width="25%">Description</th>
      <td>Persistent Disk being consumed by the <code>p-rabbitmq</code> VM.<br><br>
      <strong>Use</strong>: If system disk fills up, there are too few consumers.
      <br><br>
      Healthmonitor reports when RabbitMQ uses more than 40% of its CPU for the past ten minutes.
      <br><br>
      <strong>Origin</strong>: JMX Bridge or BOSH HM<br>
      <strong>Type</strong>: percent<br>
      <strong>Frequency</strong>: 30 s (default), 10 s (configurable minimum)<br>
   </tr>
   <tr>
      <th>Recommended measurement</th>
      <td>Average over last 10 minutes</td>
   </tr>
   <tr>
      <th>Recommended alert thresholds</th>
      <td><strong>Yellow warning</strong>: &gt; 60 <br>
      <strong>Red critical</strong>: &gt; 75</td>
   </tr>
   <tr>
      <th>Recommended response</th>
      <td>Remember that "an empty rabbit is a happy rabbit". Add more consumers to drain the queue as fast as possible.
      </td>
   </tr>
</table>
