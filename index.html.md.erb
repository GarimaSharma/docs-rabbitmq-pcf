---
breadcrumb: RabbitMQ for Pivotal Cloud Foundry Documentation
title: RabbitMQ for PCF
owner: London Services
---
## <a id='AboutTile'></a>About RabbitMQ for PCF

RabbitMQ for PCF enables PCF app developers to provision and use the RabbitMQ message broker with a
single command.

RabbitMQ for PCF v1.8 supports two types of service, an *on-demand* service and a *pre-provisioned* service.
This table summarizes the main differences between the two:

<table id='rabbit-odb-vs-pre' border="1" class="nice"><tr>
   <th></th>
   <th>Available Since</th>
   <th>VMs it Runs On</th>
   <th>How VMs are Created</th>
   <th>Metrics Name Prefix</th>
   </tr><tr>
   <th>On-Demand Service</th>
   <td>New for v1.8</td>
   <td>Dedicated VM that serves a single service instance</td>
   <td>PCF creates each VM on-demand when app developer creates service instance</td>
   <td><code>p.rabbitmq</code> (with a dot) in future versions. As of v1.8.2, emitted as<code>p-rabbitmq</code>, a <a href="./releases.html#18x">known issue</a>.</td>
   </tr><tr>
   <th>Pre-Provisioned Service</th>
   <td>v1.2</td>
   <td>Multi-tenant VMs shared by apps across PCF deployment</td>
   <td>PCF creates all VMs when operator deploys or updates service</td>
   <td><code>p-rabbitmq</code> (with a dash)</td>
   </tr>
</table>

This RabbitMQ for PCF v1.8 documentation describes both service types.
Documentation for RabbitMQ for PCF v1.7 and earlier only describes a pre-provisioned service.

## What are dedicated instances and when to use them with RabbitMQ
Right now (for PCF RabbitMQ versions before 1.8.0), the RabbitMQ Service
instances correspond to a unique RabbitMQ Vhost on the multi-tenant RabbitMQ
cluster. In PCF RabbitMQ 1.8.0, we are introducing [On-Demand Broker
(ODB)](https://docs.pivotal.io/svc-sdk/odb/index.html) support (experimental). That means
that a new cluster can be created and dedicated to a single application
(single-tenant).

## <a id='AboutRabbit'></a>About RabbitMQ

RabbitMQ is a fast and dependable open-source message server, which supports a wide range of use cases
including reliable integration, content-based routing and global data delivery, and high-volume monitoring and data ingestion.

Emerging as the de facto standard for cloud messaging, RabbitMQ is used for efficient communication
between servers, applications and devices, and creates lasting value by enabling rapid development of modern decentralized
application and data architectures that can scale with your business needs.



## <a id='snapshot'></a> Product Snapshot

The following table provides version and version-support information about RabbitMQ for PCF.

<table class="nice">
    <th>Element</th>
    <th>Details</th>
    <tr>
        <td>Version</td>
        <td>v1.8.0</td>
    </tr>
    <tr>
        <td>Release date</td>
        <td>April 13, 2017</td>
    </tr>
    <tr>
        <td>Software component version</td>
        <td>RabbitMQ OSS v3.6.9</td>
    </tr>
    <tr>
        <td>Compatible Ops Manager version(s)</td>
        <td>v1.9.x, and 1.10.x</td>
    </tr>
    <tr>
        <td>Compatible Elastic Runtime version(s)</td>
        <td>v1.9.x, and 1.10.x</td>
    </tr>
    <tr>
        <td>IaaS support</td>
        <td>AWS, Azure, GCP, OpenStack, and vSphere</td>
    </tr>
</table>

## <a id='features'></a>Features

### On-Demand

* Provision on-demand single node dedicated instances of RabbitMQ

### Pre-Provisioned

* Provision an instance of the RabbitMQ service, which corresponds to a unique RabbitMQ Vhost (virtual host)
* Bind applications to an instance of the plan, providing unique credentials for each binding
* Management dashboard access to PCF Operators and application developers
* Deployment across multiple availability zones, with nodes striped across the AZs automatically
* Enable SSL (Secure Sockets Layer) for the AMQP, MQTT, STOMP protocols
* HAProxy load balancer across all nodes to balance connections
* Plugin configuration can be easily changed at any time and the cluster redeployed and updated
* The cluster topology can be changed and easily scaled out
* Automated upgrades of RabbitMQ for major, minor and patch releases (see release notes for downtime requirements)
* Configure the end point for the RabbitMQ Syslog
* RabbitMQ and HAProxy metrics are exposed on the firehose

## <a id='known-issues'></a>Known Issues

* Allows changing of the `Marketplace name` for **Dedicated Instance**, which will be removed
* `disk_free_limit` changed from `50MB` to `40%` of disk capacity. This may result
  in <a href="https://www.rabbitmq.com/disk-alarms.html">disk alarms</a> being triggered
* Deleting your RabbitMQ for PCF tile can timeout (1 hour) if many dedicated instances have been
  deployed. Retrying will continue the cleanup process
* Cannot scale-out if [Erlang Cookie](./install-config-pp.html#erlang) is not specified
* Changing [Erlang Cookie](./install-config-pp.html#erlang) value results in failed deployment

## <a id=''></a>Feedback

Please provide any bugs, feature requests, or questions to the [PCF Feedback list](mailto:pivotal-cf-feedback@pivotal.io).
